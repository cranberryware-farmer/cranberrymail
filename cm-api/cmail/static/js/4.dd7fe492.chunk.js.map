{"version":3,"sources":["components/Typography.js","components/Page.js","components/Cranberry/EnhancedTable.js","components/customEditor.js","pages/ComposeModal.js","components/MessageEditor.js","pages/EmailPage.js","pages/SettingsPage.js","pages/InboxPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","objectWithoutProperties","classes","classNames","defineProperty","react_default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","active","key","desc","orderBy","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","EnhancedTableToolbar","props","numSelected","tableTitle","curFolder","undefined","toLowerCase","Toolbar","clsx","esm_Typography_Typography","id","Fragment","match","Tooltip","IconButton","aria-label","onClick","unselectAll","spamEmails","rows","index_esm","unspamEmails","trashEmails","untrashEmails","useStyles","width","paper","table","minWidth","tableWrapper","overflowX","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","React","memo","headCells","labelRowsPerPage","showEmptyRows","showEmail","trashEmail","starEmail","untrashEmail","spamEmail","unspamEmail","breakpoint","_React$useState","useState","_React$useState2","slicedToArray","order","_React$useState3","_React$useState4","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","_React$useState10","dense","setDense","_React$useState11","_React$useState12","rowsPerPage","setRowsPerPage","openEmail","event","uid","handleClick","selectedIndex","indexOf","newSelected","concat","slice","toggleStar","preventDefault","sFlag","document","querySelector","getAttribute","handleChangePage","newPage","handleChangeRowsPerPage","target","value","emptyRows","Math","min","useEffect","Paper","Grid","container","direction","justify","alignItems","style","borderBottom","item","xs","Checkbox","indeterminate","checked","onChange","newSelecteds","n","inputProps","EnhancedTable_EnhancedTableToolbar","ev","TablePagination","rowsPerPageOptions","component","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","Table","aria-labelledby","size","striped","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","row","isItemSelected","labelId","TableRow","hover","role","aria-checked","tabIndex","TableCell","rowSpan","keys","row_key","row_key_index","ri","data-starred","substr","date","split","colSpan","FormControlLabel","control","Switch","label","HeadlinesPicker","onWindowClick","_this","onOverrideContent","_this2","this","setTimeout","window","addEventListener","removeEventListener","_this3","buttons","HeadlineOneButton","HeadlineTwoButton","HeadlineThreeButton","Button","i","Component","HeadlinesButton","_this4","toolbarPlugin","createToolbarPlugin","undoPlugin","createUndoPlugin","UndoButton","RedoButton","plugins","CustomToolbarEditor","focus","_this5","editor","_this6","lib_default","editorState","onEditorStateChange","ref","element","customEditor_Toolbar","externalProps","draft_js_static_toolbar_plugin_lib","draft_js_buttons_lib","customEditor_HeadlinesButton","dockStyles","zIndex","boxShadow","background","left","isMobile","right","bottom","border-radius","minDockStyles","composeModal","headerLeft","headerRight","_useState","_useState2","dockState","hiddenClass","hiddenAction","attachmentContent","getElementById","files","composeContent","Row","Col","md","sm","resizeDock","hidden","closemodal","Form","onSubmit","sendemail","FormGroup","Input","placeholder","defaultValue","to","required","cc","bcc","FormText","subject","customEditor_CustomToolbarEditor","meditorstate","content","es","meditorstatehandler","es_Button","ri_index_esm","Label","for","md_index_esm","multiple","attachmenthandler","Modal","isOpen","modal","toggle","classnm","ModalBody","react_dock_lib_default","isVisible","dimMode","fluid","dockStyle","MessageEditor","classCallCheck","_super","call","state","EditorState","createEmpty","isCc","isBcc","setState","contentState","markdown","markdownString","fwdMsg","rawData","markdownToDraft","convertFromRaw","stateFromHTML","createWithContent","isEmailFwd","orCc","orBcc","orFrom","href","dist_react_draft_wysiwyg","wrapperClassName","editorClassName","toolbarClassName","toolbar","inline","inDropdown","list","textAlign","link","history","handleAttachment","email","getCurrentContent","draftToMarkdown","convertToRaw","draftToHtml","replyEmail","resetSubject","closeEditors","emailPage","floatDir","xl","lg","thread","emlBody","body","hasAttachments","path","location","pathname","arr","segment","pop","join","attachment","Card","CardHeader","NavLink","fetchEmails","emailStarred","nextStarredState","isEmailStarred","from","displayDate","CardBody","dangerouslySetInnerHTML","__html","components_MessageEditor","editorHandler","orTo","activeThread","orSubject","settingsPage","markdownSwitch","CustomInput","defaultChecked","enableMarkdown","createData","starred","timestamp","numeric","disablePadding","InboxPage","fileData","updateState","objectSpread","onModalEditorStateChange","modalEditorState","emailBody","config","headers","Accept","Authorization","app","token","messageId","data","FormData","append","axios","post","_api","then","res","result","toast","message","emailState","trashFolder","starredFolder","filter","flag","Array","isArray","JSON","stringify","curfolder","trash","spam","sendEmail","resetFields","handleCompose","modalType","closeModal","dockstate","setEmailNode","node","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","origin","busy","threadMax","getRowIndex","max","emailThreads","uids","showSettings","row_index","scrollTo","folder","thread_uids","has_thread","status","curDate","erows","threads","search","fdate","isAttached","searchEmails","term","sterm","toLocaleDateString","mail","handleRefresh","cells","modal_backdrop","modal_nested_parent","modal_nested","backdrop","enableEmailThread","dateFormat","push","prevProps","searchTerm","react_toastify","components_Page","Spinner","marginTop","Cranberry_EnhancedTable","rowsLength","ComposeModal","composehandler","build","tooltip","rotate","EmailPage","SettingsPage","withRouter"],"mappings":"sOAIMA,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRC,EAAa,SAAAC,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAUC,EAAoCJ,EAApCI,UAAWC,EAAyBL,EAAzBK,KAASC,EAAgBC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,4BAC5DS,EAAUC,IAAWH,OAAAI,EAAA,EAAAJ,CAAA,GAAGF,IAASA,GAAQD,GAW/C,OAPEH,EADEC,KAEQA,GAAOjB,EAAOoB,GACbpB,EAAOoB,GAEP,KAGNO,EAAAC,EAAAC,cAACb,EAADM,OAAAQ,OAAA,GAAcT,EAAd,CAAyBF,UAAWK,MAS7CV,EAAWiB,aAAe,CACxBX,KAAM,KAGON,QCtCTkB,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAApB,GAOP,IANJqB,EAMIrB,EANJqB,MACAC,EAKItB,EALJsB,YACKpB,EAIDF,EAJJG,IACAC,EAGIJ,EAHJI,UACAmB,EAEIvB,EAFJuB,SACGjB,EACCC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,sDACES,EAAUQ,EAAIO,EAAE,OAAQpB,GAE9B,OACEQ,EAAAC,EAAAC,cAACZ,EAADK,OAAAQ,OAAA,CAAKX,UAAWK,GAAaH,GAC3BM,EAAAC,EAAAC,cAAA,OAAKV,UAAWa,EAAIQ,EAAE,WACnBJ,GAA0B,kBAAVA,EACfT,EAAAC,EAAAC,cAACY,EAAD,CAAYrB,KAAK,KAAKD,UAAWa,EAAIQ,EAAE,UACpCJ,GAGDA,EAEHC,GACCV,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYvB,UAAWa,EAAIQ,EAAE,eAC3Bb,EAAAC,EAAAC,cAACc,EAAA,EAAD,aACCN,EAAYO,QACXP,EAAYQ,IAAI,SAAAC,EAAmBC,GAAnB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,OAAT,OACdtB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAgBO,IAAKH,EAAOE,OAAQA,GACjCD,OAMZV,IAkBPH,EAAKJ,aAAe,CAClBb,IAAK,MACLkB,MAAO,IAGMD,oMC5Cf,SAASgB,EAAKvB,EAAGW,EAAGa,GAClB,OAAIb,EAAEa,GAAWxB,EAAEwB,IACT,EAENb,EAAEa,GAAWxB,EAAEwB,GACV,EAEF,EAkFT,IAAMC,EAAmBC,YAAW,SAAAC,GAAK,MAAK,CAC5CC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAE9BE,UACyB,UAAvBL,EAAMM,QAAQzC,KACV,CACE0C,MAAOP,EAAMM,QAAQE,UAAUC,KAC/BC,gBAAiBC,YAAQX,EAAMM,QAAQE,UAAUI,MAAO,MAE1D,CACEL,MAAOP,EAAMM,QAAQO,KAAKC,QAC1BJ,gBAAiBV,EAAMM,QAAQE,UAAUO,MAEjDC,OAAQ,CACNC,KAAM,YAERC,QAAS,CACPX,MAAOP,EAAMM,QAAQO,KAAKL,WAE5B3B,MAAO,CACLoC,KAAM,eAIJE,EAAuB,SAAAC,GAC3B,IAAMnD,EAAU6B,IACRuB,EAA4BD,EAA5BC,YAAaC,EAAeF,EAAfE,WAEjBC,OAAyBC,GAAZF,EAAyBA,EAAWG,cAAe,GAEpE,OACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CACE9D,UAAW+D,kBAAK1D,EAAQgC,KAATlC,OAAAI,EAAA,EAAAJ,CAAA,GACZE,EAAQoC,UAAYgB,EAAc,KAGrCjD,EAAAC,EAAAC,cAAA,OAAKV,UAAWK,EAAQY,OACrBwC,EAAc,EACbjD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYrB,MAAM,WAAWc,EAA7B,aAEAjD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAYC,GAAG,cAAcP,IAGjClD,EAAAC,EAAAC,cAAA,OAAKV,UAAWK,EAAQ+C,SACxB5C,EAAAC,EAAAC,cAAA,OAAKV,UAAWK,EAAQiD,SACrBG,EAAc,GACXjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KAC8B,OAA5BP,EAAUQ,MAAM,QAAoB3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASnD,MAAM,gBACnDT,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACIC,aAAW,OACXC,QAAW,WACDf,EAAMgB,cACNhB,EAAMiB,WAAWjB,EAAMkB,QAErClE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,QAESnE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASnD,MAAM,YACxBT,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,aAAW,SACXC,QAAW,WACHf,EAAMgB,cACNhB,EAAMoB,aAAapB,EAAMkB,QAEnClE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,QAI6B,OAA7BhB,EAAUQ,MAAM,SAAqB3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASnD,MAAM,iBACpDT,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACIC,aAAW,SACXC,QAAW,WACDf,EAAMgB,cACNhB,EAAMqB,YAAYrB,EAAMkB,QAEtClE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,QAESnE,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACT1D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASnD,MAAM,iBACfT,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,aAAW,SACXC,QAAW,WACCf,EAAMgB,cACNhB,EAAMqB,YAAYrB,EAAMkB,QAEtClE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,QAGFnE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAASnD,MAAM,kBACbT,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,aAAW,WACXC,QAAW,WACHf,EAAMgB,cACNhB,EAAMsB,cAActB,EAAMkB,QAEpClE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,aAiBRI,EAAY5C,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ2C,MAAO,QAGTC,MAAO,CACLD,MAAO,QAGTE,MAAO,CACLC,SAAU,KAEZC,aAAc,CACZC,UAAW,QAEbC,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACNC,OAAQ,EACRC,QAAS,EACTC,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLd,MAAO,MAmZIe,MAAMC,KA/YC,SAAApG,GAchB,IAbJ8E,EAaI9E,EAbJ8E,KACAuB,EAYIrG,EAZJqG,UACAvC,EAWI9D,EAXJ8D,WACAwC,EAUItG,EAVJsG,iBACAC,EASIvG,EATJuG,cAEAC,GAOIxG,EARJ4D,MAQI5D,EAPJwG,WACAC,EAMIzG,EANJyG,WACAC,EAKI1G,EALJ0G,UACAC,EAII3G,EAJJ2G,aACAC,EAGI5G,EAHJ4G,UACAC,EAEI7G,EAFJ6G,YACAC,EACI9G,EADJ8G,WAEMrG,EAAU0E,IADZ4B,EAEsBZ,IAAMa,SAAS,QAFrCC,EAAA1G,OAAA2G,EAAA,EAAA3G,CAAAwG,EAAA,GAEGI,EAFHF,EAAA,GAAAG,GAAAH,EAAA,GAG0Bd,IAAMa,SAAS,OAHzCK,EAAA9G,OAAA2G,EAAA,EAAA3G,CAAA6G,EAAA,GAGG/E,EAHHgF,EAAA,GAAAC,GAAAD,EAAA,GAI4BlB,IAAMa,SAAS,KAJ3CO,EAAAhH,OAAA2G,EAAA,EAAA3G,CAAA+G,EAAA,GAIGE,EAJHD,EAAA,GAIaE,EAJbF,EAAA,GAAAG,EAKoBvB,IAAMa,SAAS,GALnCW,EAAApH,OAAA2G,EAAA,EAAA3G,CAAAmH,EAAA,GAKGE,EALHD,EAAA,GAKSE,EALTF,EAAA,GAAAG,EAMsB3B,IAAMa,UAAS,GANrCe,EAAAxH,OAAA2G,EAAA,EAAA3G,CAAAuH,EAAA,GAMGE,EANHD,EAAA,GAMUE,EANVF,EAAA,GAAAG,EAUkC/B,IAAMa,SAAS,IAVjDmB,EAAA5H,OAAA2G,EAAA,EAAA3G,CAAA2H,EAAA,GAUGE,EAVHD,EAAA,GAUgBE,EAVhBF,EAAA,GAWJ7B,EAAmBA,GAAsC,WACzDC,EAAwC,oBAAjBA,GAAsCA,EAE7D,IAmBM+B,EAAY,SAACC,EAAOC,GACxBhC,EAAUgC,IAGNC,EAAc,SAACF,EAAOlE,GAC1B,IAAMqE,EAAgBlB,EAASmB,QAAQtE,GACnCuE,EAAc,IAEK,IAAnBF,EACFE,EAAcA,EAAYC,OAAOrB,EAAUnD,GAChB,IAAlBqE,EACTE,EAAcA,EAAYC,OAAOrB,EAASsB,MAAM,IACvCJ,IAAkBlB,EAAS3F,OAAS,EAC7C+G,EAAcA,EAAYC,OAAOrB,EAASsB,MAAM,GAAI,IAC3CJ,EAAgB,IACzBE,EAAcA,EAAYC,OACxBrB,EAASsB,MAAM,EAAGJ,GAClBlB,EAASsB,MAAMJ,EAAgB,KAInCjB,EAAYmB,IAGRG,GAAa,SAACtH,EAAG4C,GACrB5C,EAAEuH,iBACF,IACIC,EADKC,SAASC,cAAc,SAAW9E,GAC5B+E,aAAa,gBAG1B1C,EAAUrC,EADE,MAAV4E,EACW,EAEA,IAIXI,GAAmB,SAACd,EAAOe,GAC/BzB,EAAQyB,IAGJC,GAA0B,SAAAhB,GAC9BF,GAAgBE,EAAMiB,OAAOC,OAC7B5B,EAAQ,IASJ6B,GACJtB,EAAcuB,KAAKC,IAAIxB,EAAatD,EAAKjD,OAAS+F,EAAOQ,GAS3D,OAPAyB,oBAAU,WACU,OAAb/C,GACDmB,GAAS,KAMbrH,EAAAC,EAAAC,cAAA,OAAKV,UAAWK,EAAQgC,MACtB7B,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAO1J,UAAWK,EAAQ4E,OACxBzE,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SACXxH,QAAS,EACTvC,UAAWK,EAAQgC,KACnB2H,MAAO,CAAEC,aAAc,sBAEvBzJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,EAACH,MAAO,CAAE1H,YAAa,IAClC9B,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEC,cACEjD,EAAS3F,OAAS,GAAK2F,EAAS3F,OAASiD,EAAKjD,OAEhD6I,QAASlD,EAAS3F,SAAWiD,EAAKjD,OAClC8I,SAxFiB,SAAApC,GAC3B,GAAIA,EAAMiB,OAAOkB,QAAjB,CACE,IAAME,EAAe9F,EAAKhD,IAAI,SAAA+I,GAAC,OAAIA,EAAExG,KACrCoD,EAAYmD,QAGdnD,EAAY,KAmFFqD,WAAY,CAAEpG,aAAc,iBAGhC9D,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,GACX3J,EAAAC,EAAAC,cAACiK,EAAD,CACElH,YAAa2D,EAAS3F,OACtBiC,WAAYA,EACZgB,KAAM0C,EACNvC,YAAawB,EACb7B,YAtGQ,SAAAoG,GAChBvD,EAAY,KAsGJvC,cAAeyB,EACf9B,WAAY+B,EACZ5B,aAAc6B,KAGlBjG,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAMO,MAAI,EAACC,IAAE,GACX3J,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7B5E,iBAAkBA,EAClB6E,UAAU,MACVC,MAAOtG,EAAKjD,OACZuG,YAAaA,EACbR,KAAMA,EACNyD,oBAAqB,CACnB3G,aAAc,iBAEhB4G,oBAAqB,CACnB5G,aAAc,aAEhB6G,aAAclC,GACdmC,oBAAqBjC,OAI3B3I,EAAAC,EAAAC,cAAA,OAAKV,UAAWK,EAAQ+E,cACtB5E,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACErL,UAAWK,EAAQ6E,MACnBoG,kBAAgB,aAChBC,KAAM3D,EAAQ,QAAU,SACxB4D,SAAO,GAEPhL,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KApYZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMhK,IAAI,SAACmK,EAAIjK,GAAL,MAAe,CAACiK,EAAIjK,KAMrD,OALAgK,EAAeE,KAAK,SAACrL,EAAGW,GACtB,IAAM2F,EAAQ4E,EAAIlL,EAAE,GAAIW,EAAE,IAC1B,OAAc,IAAV2F,EAAoBA,EACjBtG,EAAE,GAAKW,EAAE,KAEXwK,EAAelK,IAAI,SAAAmK,GAAE,OAAIA,EAAG,KA8XtBE,CAAWrH,EA3X1B,SAAoBqC,EAAO9E,GACzB,MAAiB,SAAV8E,EACH,SAACtG,EAAGW,GAAJ,OAAUY,EAAKvB,EAAGW,EAAGa,IACrB,SAACxB,EAAGW,GAAJ,OAAWY,EAAKvB,EAAGW,EAAGa,IAwXI+J,CAAWjF,EAAO9E,IACjCyG,MAAMlB,EAAOQ,EAAaR,EAAOQ,EAAcA,GAC/CtG,IAAI,SAACuK,EAAKrK,GACT,IA5EGqC,EA4EGiI,GA5EHjI,EA4E+BgI,EAAIhI,IA5EH,IAA1BmD,EAASmB,QAAQtE,IA6EpBkI,EAAO,2BAAA1D,OAA8B7G,GAG3C,MAAgB,OAAb8E,EACMlG,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACL1D,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,WACLC,eAAcL,EACdM,UAAW,EACXzK,IAAKkK,EAAIhI,GACTmD,SAAU8E,EACVlM,UAAU,SAEZQ,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACI7G,QAAQ,WACRrB,QAAS,SAAA4D,GAAK,OAAIE,EAAYF,EAAO8D,EAAIhI,KACzCyI,QAAS,GAETlM,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEE,QAAS4B,EACTxB,WAAY,CAAEY,kBAAmBa,OAIpChM,OAAOwM,KAAKV,GAAKvK,IAAI,SAACkL,EAASC,GAC9B,GAAgB,OAAZD,EAAkB,CACpB,GAAgB,YAAZA,EAAuB,CACzB,IAAIE,EAAKtM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,KACTjM,EAAAC,EAAAC,cAAA,QACEuD,GAAI,QAAUgI,EAAIhI,GAClBM,QAAS,SAAAlD,GAAC,OAAIsH,GAAWtH,EAAG4K,EAAIhI,KAChC8I,eAAcd,EAAIW,GAClB5M,UAAU,WAEQ,IAAjBiM,EAAIW,GAAiB,SAAW,WAG/B,OACEpM,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,KACGU,GAMJ,GAAgB,YAAZF,EAAuB,CAEhC,IACIE,EAAKtM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACKlI,QAAS,SAAA4D,GAAK,OAAID,EAAUC,EAAM8D,EAAIhI,MAEvCgI,EAAIW,GAASI,OAAO,EAJrB,IACH,OAOL,OACExM,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,KACGU,GAKJ,GAAgB,eAAZF,EAQL,IAAa,cAAVA,EAAsB,CAC7B,IAAIK,EAAOhB,EAAIW,GAASM,MAAM,KAC9BD,EAAOA,EAAK,GACZ,IAAIH,EAAKtM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACPlI,QAAS,SAAA4D,GAAK,OAAID,EAAUC,EAAM8D,EAAIhI,MAErCgJ,GAGG,OACEzM,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,KACGU,GAIX,IAAIA,EAAKtM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACPlI,QAAS,SAAA4D,GAAK,OAAID,EAAUC,EAAO8D,EAAIhI,MAEvCzD,EAAAC,EAAAC,cAAA,cAASuL,EAAIW,KAGX,OACEpM,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,KACGU,IAOb,OAAO,QAMNtM,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACLC,OAAK,EACLC,KAAK,WACLC,eAAcL,EACdM,UAAW,EACXzK,IAAKkK,EAAIhI,GACTmD,SAAU8E,EACVlM,UAAU,SAEZQ,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACI7G,QAAQ,WACRrB,QAAS,SAAA4D,GAAK,OAAIE,EAAYF,EAAO8D,EAAIhI,KACzCyI,QAAS,GAETlM,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEE,QAAS4B,EACTxB,WAAY,CAAEY,kBAAmBa,MAIpChM,OAAOwM,KAAKV,GAAKvK,IAAI,SAACkL,EAASC,GAC9B,GAAgB,OAAZD,EAAkB,CACpB,GAAgB,YAAZA,EAWA,OAVOpM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,KACTjM,EAAAC,EAAAC,cAAA,QACEuD,GAAI,QAAUgI,EAAIhI,GAClBM,QAAS,SAAAlD,GAAC,OAAIsH,GAAWtH,EAAG4K,EAAIhI,KAChC8I,eAAcd,EAAIW,GAClB5M,UAAU,WAEQ,IAAjBiM,EAAIW,GAAiB,SAAW,WAK9B,GAAgB,YAAZA,EAUL,OARKpM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACKlI,QAAS,SAAA4D,GAAK,OAAID,EAAUC,EAAM8D,EAAIhI,MAEvCgI,EAAIW,GAASI,OAAO,EAAG,IAH3B,OAWJ,GAAgB,eAAZJ,EAQL,IAAa,cAAVA,EAAsB,CAC7B,IAAIK,EAAOhB,EAAIW,GAOT,OANGpM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACPlI,QAAS,SAAA4D,GAAK,OAAID,EAAUC,EAAM8D,EAAIhI,MAErCgJ,GAWJ,OANUzM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACPlI,QAAS,SAAA4D,GAAK,OAAID,EAAUC,EAAM8D,EAAIhI,MAErCgI,EAAIW,KAQX,OAAO,UAMhBtD,GAAY,GAAKnD,GAChB3F,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACErK,IAAI,KACJiI,MAAO,CAAEvE,QAASmC,EAAQ,GAAK,IAAM0B,KAErC9I,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CAAWU,QAASlH,EAAUxE,OAAS,QAMjDjB,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7B5E,iBAAkBA,EAClB6E,UAAU,MACVC,MAAOtG,EAAKjD,OACZuG,YAAaA,EACbR,KAAMA,EACNyD,oBAAqB,CACnB3G,aAAc,iBAEhB4G,oBAAqB,CACnB5G,aAAc,aAEhB6G,aAAclC,GACdmC,oBAAqBjC,MAGzB3I,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CACEC,QAAS7M,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAQhD,QAAS1C,EAAO2C,SA5Sb,SAAApC,GACxBN,EAASM,EAAMiB,OAAOkB,YA4SlBiD,MAAM,kxBChnBRC,sMASJC,cAAgB,kBAGdC,EAAKlK,MAAMmK,uBAAkB/J,sEAXX,IAAAgK,EAAAC,KAClBC,WAAW,WAAQC,OAAOC,iBAAiB,QAASJ,EAAKH,gEAIzDM,OAAOE,oBAAoB,QAASJ,KAAKJ,gDAQlC,IAAAS,EAAAL,KACDM,EAAU,CAACC,qBAAmBC,qBAAmBC,wBACvD,OACE9N,EAAAC,EAAAC,cAAA,WACGyN,EAAQzM,IAAI,SAAC6M,EAAQC,GAAT,OACXhO,EAAAC,EAAAC,cAAC6N,EAADpO,OAAAQ,OAAA,CAAQoB,IAAKyM,GAAON,EAAK1K,kBAnBLiL,aA0BxBC,sMACJnK,QAAU,kBAIRoK,EAAKnL,MAAMmK,kBAAkBH,4DAG7B,OACEhN,EAAAC,EAAAC,cAAA,OAAKV,UAAU,yBACbQ,EAAAC,EAAAC,cAAA,UAAQ6D,QAASsJ,KAAKtJ,QAASvE,UAAU,kBAAzC,aAVsByO,aAkBxBG,GAAgBC,OACd/K,GAAY8K,GAAZ9K,QAEFgL,GAAaC,OACXC,GAA2BF,GAA3BE,WAAYC,GAAeH,GAAfG,WAEdC,GAAU,CAACN,GAAeE,IAEXK,sMAEnBC,MAAQ,WACNC,EAAKC,OAAOF,gEAGL,IAAAG,EAAA1B,KAEP,OACErN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKV,UAAU,SAASuE,QAASsJ,KAAKuB,OACpC5O,EAAAC,EAAAC,cAAC8O,GAAA/O,EAAD,CACEgP,YAAa5B,KAAKrK,MAAMiM,YACxBlF,SAAUsD,KAAKrK,MAAMkM,oBACrBR,QAASA,GACTS,IAAK,SAACC,GAAcL,EAAKD,OAASM,KAEpCpP,EAAAC,EAAAC,cAACmP,GAAD,KAGI,SAACC,GAAD,OACEtP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsO,GAAD7O,OAAAQ,OAAA,GAAgBmP,EAAhB,CAA+B9P,UAAU,uBACzCQ,EAAAC,EAAAC,cAACuO,GAAD9O,OAAAQ,OAAA,GAAgBmP,EAAhB,CAA+B9P,UAAU,uBACzCQ,EAAAC,EAAAC,cAACqP,GAAA,UAAcD,GACftP,EAAAC,EAAAC,cAACsP,GAAA,WAAeF,GAChBtP,EAAAC,EAAAC,cAACsP,GAAA,aAAiBF,GAClBtP,EAAAC,EAAAC,cAACsP,GAAA,gBAAoBF,GACrBtP,EAAAC,EAAAC,cAACqP,GAAA,UAAcD,GACftP,EAAAC,EAAAC,cAACuP,GAAoBH,GACrBtP,EAAAC,EAAAC,cAACsP,GAAA,oBAAwBF,GACzBtP,EAAAC,EAAAC,cAACsP,GAAA,kBAAsBF,GACvBtP,EAAAC,EAAAC,cAACsP,GAAA,iBAAqBF,eAhCSrB,sDC9C3CyB,GAAa,CACjBrK,SAAU,QACVsK,OAAQ,EACRC,UAAW,6BACXC,WAAY,QACZC,KAAMC,YAAW,OAAS,QAC1BzK,IAAK,QACLd,MAAOuL,YAAW,MAAQ,MAC1B9K,OAAQ8K,YAAW,OAAS,MAC5BC,MAAO,OACPC,OAAQ,MACRC,gBAAiB,oBACjB/K,SAAU,UAGNgL,GAAgB,CACpB9K,SAAU,QACVsK,OAAQ,EACRC,UAAW,6BACXC,WAAY,QACZC,KAAM,QACNxK,IAAK,QACLd,MAAO,MACPS,OAAQ,MACR+K,MAAO,OACPC,OAAQ,MACRC,gBAAiB,oBACjB/K,SAAU,UAmNGiL,GAhNM,SAACpN,GAAU,IAK1BqN,EAAYC,EALcC,EAEJnK,mBAAS,GAFLoK,EAAA7Q,OAAA2G,EAAA,EAAA3G,CAAA4Q,EAAA,GAGxBE,GAHwBD,EAAA,GAAAA,EAAA,GAGZxN,EAAMyN,WAGpBC,EAAc,GACdC,GAAe,EAEF,aAAdF,GACDJ,EAAa,EACbC,EAAc,GACQ,aAAdG,GACRJ,EAAa,EACbC,EAAc,EACdI,EAAc,SACXX,cACDY,GAAe,KAGjBN,EAAa,EACbC,EAAc,GAGhBrH,oBAAU,WAELjG,EAAM4N,oBACPtI,SAASuI,eAAe,cAAcC,MAAQ9N,EAAM4N,qBAIxD,IAAMG,EACJ/Q,EAAAC,EAAAC,cAAA,OAAKV,UAAWkR,GACd1Q,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAKxR,UAAU,+DACbQ,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKC,GAAIb,EAAYc,GAAId,EAAY1G,GAAI0G,EAAY7Q,UAAU,aAC7DQ,EAAAC,EAAAC,cAAA,OAAKV,UAAU,QAAf,gBAEFQ,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKC,GAAIZ,EAAaa,GAAIb,EAAa3G,GAAI2G,EAAa9Q,UAAU,aAChEQ,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAKxR,UAAU,aACbQ,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIxH,GAAG,KACpB3J,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACE3E,UAAU,aACVuE,QACE,WACmB,aAAd0M,EACDzN,EAAMoO,WAAW,UAEjBpO,EAAMoO,WAAW,aAIvBC,OAAQV,KAGZ3Q,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIxH,GAAG,KACpB3J,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACE3E,UAAU,aACVuE,QACE,WACmB,aAAd0M,EACDzN,EAAMoO,WAAW,UAEjBpO,EAAMoO,WAAW,aAIvBC,OAAQV,KAGZ3Q,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIxH,GAAG,KACpB3J,EAAAC,EAAAC,cAAA,QACEV,UAAU,8BACVuE,QACE,WACEf,EAAMsO,eAJZ,WAaRtR,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CAAMC,SAAU,WAAQxO,EAAMyO,aAAejS,UAAU,OACrDQ,EAAAC,EAAAC,cAACwR,GAAA,EAAD,KACE1R,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACL4B,KAAK,KACLoC,GAAG,KACHmO,YAAY,MACZpS,UAAU,WACVqS,aAAc7O,EAAM8O,GACpBC,UAAQ,IAEV/R,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACL4B,KAAK,OACLoC,GAAG,KACHmO,YAAY,MACZpS,UAAU,gBACVqS,aAAc7O,EAAMgP,KAEtBhS,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACL4B,KAAK,MACLoC,GAAG,MACHmO,YAAY,OACZpS,UAAU,gBACVqS,aAAc7O,EAAMiP,MAEtBjS,EAAAC,EAAAC,cAACgS,GAAA,EAAD,CAAU/P,MAAM,SAAhB,yCACAnC,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACL4B,KAAK,UACLoC,GAAG,UACHmO,YAAY,uBACZpS,UAAU,gBACVqS,aAAc7O,EAAMmP,WAGxBnS,EAAAC,EAAAC,cAACwR,GAAA,EAAD,KAkBE1R,EAAAC,EAAAC,cAACkS,GAAD,CACE3O,GAAG,QACHwL,YAAajM,EAAMqP,aACnBC,QAAUtP,EAAMsP,QAChBpD,oBAAqB,SAACqD,GACpBvP,EAAMwP,oBAAoBD,OAIhCvS,EAAAC,EAAAC,cAACwR,GAAA,EAAD,KACE1R,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CAAS1O,QAAU,kBAAOf,EAAMyO,cAAhC,QACOzR,EAAAC,EAAAC,cAACwS,GAAA,EAAD,OAEP1S,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,IAAI,aAAapT,UAAU,eAAcQ,EAAAC,EAAAC,cAAC2S,GAAA,EAAD,OAChD7S,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACL4B,KAAK,aACLoC,GAAG,aACHqP,SAAS,WACT/I,SAAW,SAACK,GACVpH,EAAM+P,kBAAkB3I,IAE1BiH,QAAM,OAOhB,MAAiB,aAAdZ,EAECzQ,EAAAC,EAAAC,cAAC8S,GAAA,EAAD,CACEC,OAAQjQ,EAAMkQ,MACdC,OAAQ,WAAQnQ,EAAMsO,cACtB9R,UAAWwD,EAAMoQ,SAEjBpT,EAAAC,EAAAC,cAACmT,GAAA,EAAD,KACGtC,IAIe,aAAdN,EAENzQ,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CACEoF,SAAS,SACTkO,UAAYvQ,EAAMkQ,MAClBM,QAAQ,OACRC,OAAO,EACP1I,KAAK,MACL2I,UAAYvD,IAEXY,GAKH/Q,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CACEoF,SAAS,SACTkO,UAAYvQ,EAAMkQ,MAClBM,QAAQ,OACRC,OAAO,EACP1I,KAAK,OACL2I,UAAYhE,IAEXqB,mfC7CM4C,4CApMb,SAAAA,EAAY3Q,GAAM,IAAAkK,EAAAvN,OAAAiU,EAAA,EAAAjU,CAAA0N,KAAAsG,IAChBzG,EAAA2G,EAAAC,KAAAzG,KAAMrK,IANR+Q,MAAQ,CACN9E,YAAa+E,eAAYC,cACzBC,MAAM,EACNC,OAAO,GAESjH,EAyClBgC,oBAAsB,SAAAD,GACpB/B,EAAKkH,SAAS,CACZnF,iBAzCF,IAAIoF,EAAe,GACnB,GAAGnH,EAAKlK,MAAMsR,SAAS,CACrB,IAAMC,EAAiBrH,EAAKlK,MAAMwR,OAC5BC,EAAUC,aAAgBH,GAChCF,EAAeM,0BAAeF,QAE9BJ,EAAeO,aAAc1H,EAAKlK,MAAMwR,QAG1C,IAAIvF,EAAc+E,eAAYa,kBAAkBR,GAXhC,OAYhBnH,EAAK6G,MAAQ,CAAC9E,YAAaA,GAZX/B,mEAkBW,IAAxBG,KAAKrK,MAAM8R,aACZxM,SAASuI,eAAe,eAAehI,MAAM,GAC1CwE,KAAK0G,MAAMG,OACZ5L,SAASuI,eAAe,MAAMhI,MAAM,IAEnCwE,KAAK0G,MAAMI,QACZ7L,SAASuI,eAAe,OAAOhI,MAAM,KAItCwE,KAAKrK,MAAM+R,KAAK9T,OAAS,IAAuB,IAAlBoM,KAAK0G,MAAMG,MAC1C7G,KAAK+G,SAAS,CACZF,MAAM,IAIP7G,KAAKrK,MAAMgS,MAAM/T,OAAS,IAAwB,IAAnBoM,KAAK0G,MAAMI,OAC3C9G,KAAK+G,SAAS,CACZD,OAAO,qCAWJ,IAAA/G,EAAAC,KACC4B,EAAgB5B,KAAK0G,MAArB9E,YAGR,OACEjP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqR,GAAA,EAAD,KACEvR,EAAAC,EAAAC,cAACwR,GAAA,EAAD,CAAWjG,KAAG,GACZzL,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,IAAI,cAAczB,GAAI,GAA7B,MACAnR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKE,GAAI,IACPnR,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACLD,UAAU,uCACViE,GAAG,cACHoO,aAAcxE,KAAKrK,MAAMiS,OACzBrD,YAAc,OAGhB5R,EAAAC,EAAAC,cAACgS,GAAA,EAAD,CAAU/P,MAAM,SAAhB,2CAILkL,KAAK0G,MAAMG,KACVlU,EAAAC,EAAAC,cAACwR,GAAA,EAAD,CAAWjG,KAAG,GACZzL,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,IAAI,KAAKzB,GAAI,GAApB,MACAnR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKE,GAAI,IACTnR,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACLD,UAAU,uCACViE,GAAG,KACHmO,YAAY,KACZC,aAAcxE,KAAKrK,MAAM8R,WAAa,GAAIzH,KAAKrK,MAAM+R,OAEvD/U,EAAAC,EAAAC,cAACgS,GAAA,EAAD,CAAU/P,MAAM,SAAhB,2CAKFnC,EAAAC,EAAAC,cAAA,KACEgV,KAAK,MACLnR,QAAS,WACPqJ,EAAKgH,SAAS,CAAEF,MAAM,MAH1B,MASFlU,EAAAC,EAAAC,cAAA,oBACCmN,KAAK0G,MAAMI,MACVnU,EAAAC,EAAAC,cAACwR,GAAA,EAAD,CAAWjG,KAAG,GACdzL,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,IAAI,MAAMzB,GAAI,GAArB,OACAnR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKE,GAAI,IACTnR,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACE5E,MAAM,MACNtN,KAAK,OACLD,UAAU,uCACViE,GAAG,MACHmO,YAAY,MACZC,aAAcxE,KAAKrK,MAAM8R,WAAa,GAAIzH,KAAKrK,MAAMgS,QAEvDhV,EAAAC,EAAAC,cAACgS,GAAA,EAAD,CAAU/P,MAAM,SAAhB,2CAKAnC,EAAAC,EAAAC,cAAA,KACEgV,KAAK,OACLnR,QAAS,WACPqJ,EAAKgH,SAAS,CAAED,OAAO,MAH3B,OASFnU,EAAAC,EAAAC,cAACwR,GAAA,EAAD,CAAWjG,KAAG,GACZzL,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAOC,IAAI,UAAUzB,GAAI,GAAzB,WACAnR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKE,GAAI,IACTnR,EAAAC,EAAAC,cAACyR,GAAA,EAAD,CACElS,KAAK,OACLsN,MAAM,UACNvN,UAAU,uCACViE,GAAG,UACHmO,YAAY,UACZC,aAAcxE,KAAKrK,MAAM8R,WAAa,QAAQzH,KAAKrK,MAAMmP,QAAS,OAAO9E,KAAKrK,MAAMmP,cAO1FnS,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACiV,GAAA,OAAD,CACElG,YAAaA,EACbmG,iBAAiB,eACjBC,gBAAgB,cAChBnG,oBAAqB7B,KAAK6B,oBAC1B0C,YAAY,yBACZ0D,iBAAiB,gBACjBC,QAAS,CACPC,OAAQ,CAAEC,YAAY,GACtBC,KAAM,CAAED,YAAY,GACpBE,UAAW,CAAEF,YAAY,GACzBG,KAAM,CAAEH,YAAY,GACpBI,QAAS,CAAEJ,YAAY,MAG3BzV,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAC2S,GAAA,EAAD,MAAP,SAA+B7S,EAAAC,EAAAC,cAAA,SACXT,KAAK,OACL4B,KAAK,aACLoC,GAAG,aACHqP,UAAQ,EACR/I,SAAW,SAACK,GACVgD,EAAKpK,MAAM8S,iBAAiB1L,MAGhCpK,EAAAC,EAAAC,cAAA,KAAGV,UAAU,cAAb,mCAElBQ,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEjT,UAAU,OACVuE,QAAS,WACP,IAAIgS,EAAQ,GACRzD,EAAUrD,EAAY+G,oBAExBD,EADC3I,EAAKpK,MAAMsR,SACJ2B,aAAgBC,wBAAa5D,IAE7B6D,KAAYD,wBAAa5D,IAGnClF,EAAKpK,MAAMoT,WAAWL,KAX1B,QAiBA/V,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACE1O,QAAS,WACPuE,SAASuI,eAAe,cAAchI,MAAM,GAC5CuE,EAAKpK,MAAM8L,SACX1B,EAAKpK,MAAMqT,eACXjJ,EAAKpK,MAAMsT,iBAGbtW,EAAAC,EAAAC,cAACiE,EAAA,EAAD,eApMkB8J,aC6MbsI,GApMG,SAACvT,GAEf,IAAIwT,EAAW,cAOhB,MANuB,OAAnBxT,EAAMkD,aACPsQ,EAAS,sBAMPxW,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAKxR,UAAU,YACbQ,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKwF,GAAI,EAAGC,GAAI,EAAGxF,GAAI,EAAGvH,GAAI,GAC1B3G,EAAM2T,OAAOzV,IAAI,SAACmK,EAAGjK,GACrB,IAAIwV,EAAUvL,EAAGwL,KAClB,GAAuB,IAApBxL,EAAGyL,eAAmB,CACtBF,GAAS,8BAIT,IAHA,IAAIG,EAAOxJ,OAAOyJ,SAASC,SACvBC,EAAMH,EAAKrK,MAAM,KACjByK,EAAUD,EAAIE,MACF,UAAVD,GACJA,EAAUD,EAAIE,MAGhBL,EAAOG,EAAIG,KAAK,KAEhB,IAAI,IAAIrJ,EAAE,EAAEA,EAAE3C,EAAGiM,WAAWrW,OAAO+M,IACjC4I,GAAS,gBAAgBG,EAAK1L,EAAGiM,WAAWtJ,GAAd,IAAwB,8BAA8B3C,EAAGiM,WAAWtJ,GAAd,KAAyB,YAE/G4I,GAAS,QAGZ,OAAQ5W,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,CAAgBnC,IAAK8J,EAAGzD,KACjC5H,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAM/X,UAAU,QACdQ,EAAAC,EAAAC,cAACsX,GAAA,EAAD,KACIxX,EAAAC,EAAAC,cAAA,OAAKV,UAAU,YACbQ,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACE3F,GAAG,OACHrR,MAAM,kBACNsD,QAAS,SAAAlD,GACPA,EAAEuH,iBACFpF,EAAMoR,SAAS,CACbpN,KAAM,SAERhE,EAAM0U,eAERlY,UAAU,0BAERQ,EAAAC,EAAAC,cAACiE,EAAA,EAAD,OAEJnE,EAAAC,EAAAC,cAAA,QAAMV,UAAU,0BAA0B6L,EAAG8G,SAE/CnS,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACE3F,GAAG,IACHtS,UAAS,eAAAyI,OAAiBuO,GAC1B/V,MAAM,eACJsD,QAAS,SAAAlD,GACPA,EAAEuH,iBACF,IAAIR,EAAMyD,EAAGzD,IACb5E,EAAM6C,WAAW+B,GACjB5E,EAAMoR,SAAS,CACbpN,KAAM,SAERhE,EAAM0U,gBAGV1X,EAAAC,EAAAC,cAACiE,EAAA,EAAD,OAEFnE,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACE3F,GAAG,IACHtS,UAAS,eAAAyI,OAAiBuO,GAC1B/V,MAAM,qBACJsD,QAAS,SAAAlD,GACPA,EAAEuH,iBACF,IAAIR,EAAMyD,EAAGzD,IACb5E,EAAMgD,UAAU4B,GAChB5E,EAAMoR,SAAS,CACbpN,KAAM,SAERhE,EAAM0U,gBAGV1X,EAAAC,EAAAC,cAACiE,EAAA,EAAD,OAEFnE,EAAAC,EAAAC,cAACuX,GAAA,EAAD,CACI3F,GAAG,IACHrR,MAAOuC,EAAM2U,aAAe,oBAAqB,kBACjD5T,QAAS,SAAAlD,GACLA,EAAEuH,iBACF,IAAIR,EAAMyD,EAAGzD,IACTgQ,EAAmB,EAGrBA,EADsB,IAArB5U,EAAM2U,aACY,EAEA,EAGrB3U,EAAMoR,SAAS,CACbyD,eAAgBD,IAGlB5U,EAAM8C,UAAU8B,EAAIgQ,IAExBpY,UAAS,eAAAyI,OAAiBuO,IAGzBxT,EAAM2U,aAAe3X,EAAAC,EAAAC,cAACiE,EAAA,EAAD,MAAWnE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,QAIrCnE,EAAAC,EAAAC,cAAA,OAAKV,UAAU,YACbQ,EAAAC,EAAAC,cAAA,QAAMV,UAAU,uBAAwB6L,EAAGyM,MAC3C9X,EAAAC,EAAAC,cAAA,QAAMV,UAAS,GAAAyI,OAAKuO,IAAaxT,EAAM+U,YAAY1M,EAAGoB,SAG5DzM,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,CACEC,wBAAyB,CACvBC,OAAM,GAAAjQ,OAAK2O,OAIjB5W,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAM/X,UAAU,QACdQ,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,KACEhY,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAKxR,UAAU,oBACZ6L,EAAE,OACDrL,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKtH,GAAG,QACN3J,EAAAC,EAAAC,cAACiY,GAAD,CACE3Y,UAAU,YACVsP,OAAQ9L,EAAMoV,cACdN,KAAMzM,EAAGyM,KACT9F,GAAI3G,EAAG2G,GACPC,IAAK5G,EAAG4G,IACRE,QAAS9G,EAAG8G,QACZiE,WAAYpT,EAAMoT,WAClBC,aAAcrT,EAAMqT,aACpBpB,OAAQ5J,EAAGyM,KACX/C,KAAM1J,EAAG2G,GACTgD,MAAO3J,EAAG4G,IACVH,GAAIzG,EAAGyG,GACPuG,KAAMhN,EAAGyG,GACTlK,IAAKyD,EAAGzD,IACR4M,OAAQxR,EAAMwR,OACdM,WAAY9R,EAAM8R,WAClBgB,iBAAmB,SAAC1L,GAASpH,EAAM8S,iBAAiB1L,IACpDkM,aAActT,EAAMsT,aACpBhC,SAAUtR,EAAMsR,YAIpBtU,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,KACEhR,EAAAC,EAAAC,cAAA,OAAKV,UAAU,QACbQ,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEjT,UAAU,OACVuE,QAAS,WACPf,EAAMsV,aAAalX,GACnB,IAAK+Q,EAAU9G,EAAG8G,QAClBnP,EAAMoR,SAAS,CACbtF,QAAQ,EACRyJ,UAAWpG,EACXA,QAASA,EACT2C,YAAY,MATlB,UAgBF9U,EAAAC,EAAAC,cAAA,OAAKV,UAAU,QACbQ,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEjT,UAAU,OACVuE,QAAS,WACPf,EAAMsV,aAAalX,GACnB,IAAI+Q,EAAU9G,EAAG8G,QACjBnP,EAAMoR,SAAS,CACbtF,QAAQ,EACRyJ,UAAWpG,EACXA,QAASA,EACT2C,YAAY,MATlB,gCC9IT0D,GAnCM,SAACxV,GAClB,IAAIyV,EAAiBzV,EAAMsR,SAC3B,OACItU,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAKxR,UAAU,YACbQ,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAKwF,GAAI,EAAGC,GAAI,EAAGxF,GAAI,EAAGvH,GAAI,GAC1B3J,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAM/X,UAAU,QACZQ,EAAAC,EAAAC,cAACsX,GAAA,EAAD,iBAGAxX,EAAAC,EAAAC,cAAC8X,GAAA,EAAD,KACIhY,EAAAC,EAAAC,cAACwY,GAAA,EAAD,CACEjZ,KAAK,SACLgE,GAAG,WACHpC,KAAK,WACL0L,MAAM,kBACNhD,SAAU,SAACK,GACPqO,EAAiBrO,EAAGxB,OAAOkB,SAE/B6O,eAAgB3V,EAAMsR,WAExBtU,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CAAQ1O,QAAS,WACbf,EAAMoR,SAAS,CACbwE,eAAgBH,EAChBzR,KAAM,SAERhE,EAAM0U,gBALV,scCNtB,SAASmB,GAAWpV,EAAIqV,EAAShB,EAAM3F,EAAQ0E,EAAKS,EAAYyB,GAC9D,MAAO,CAAEtV,KAAIqV,UAAShB,OAAM3F,UAAS4G,aAOvC,IAAMtT,GAAY,CAChB,CAAEhC,GAAI,UAAWuV,SAAS,EAAMC,gBAAgB,EAAOlM,MAAO,IAC9D,CAAEtJ,GAAI,OAAQuV,SAAS,EAAOC,gBAAgB,EAAOlM,MAAO,QAC5D,CAAEtJ,GAAI,UAAWuV,SAAS,EAAOC,gBAAgB,EAAOlM,MAAO,WAC/D,CAAEtJ,GAAI,YAAauV,SAAS,EAAOC,gBAAgB,EAAOlM,MAAO,SAW7DmM,4CACJ,SAAAA,EAAYlW,GAAO,IAAAkK,EAAA,OAAAvN,OAAAiU,EAAA,EAAAjU,CAAA0N,KAAA6L,IACjBhM,EAAA2G,EAAAC,KAAAzG,KAAMrK,IA4CR8S,iBAAmB,SAAC1L,GAChB,IAAM+O,EAAW/O,EAAGxB,OAAOkI,MAC3B5D,EAAKkH,SAAS,CACZkD,WAAY6B,KAhDCjM,EAoDnBkM,YAAc,SAACrF,GACb7G,EAAKkH,SAALzU,OAAA0Z,EAAA,EAAA1Z,CAAA,GAAkBoU,KArDD7G,EAwDnBoM,yBAA2B,SAAAC,GACzBrM,EAAKkH,SAAS,CACZmF,sBA1DerM,EA8DnBkL,cAAgB,WACdlL,EAAKkH,SAAS,CACZtF,QAAQ,KAhEO5B,EAoEnBmJ,aAAc,WACZnJ,EAAKkH,SAAS,CACZjC,QAASjF,EAAK6G,MAAMwE,aAtELrL,EA0EnBkJ,WAAa,SAACoD,GAAc,IAGpBC,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAOFjD,EAAO2C,EAEPxH,EAAM1J,SAASuI,eAAe,MAC9BoB,EAAM3J,SAASuI,eAAe,OAC9BiB,EAAKxJ,SAASuI,eAAe,eAAehI,MAC5CsJ,EAAU7J,SAASuI,eAAe,WAAWhI,MAC7CkR,EAAY7M,EAAK6G,MAAMgG,UAEvBC,EAAO,GAEX,GAAG9M,EAAK6G,MAAMuD,WAAW,CAEvB0C,EAAO,IAAIC,SAKX,IAHA,IAAIjM,EAAE,EACFmL,EAAWjM,EAAK6G,MAAMuD,WAErBtJ,EAAEmL,EAASlY,OAAO+M,IACrBgM,EAAKE,OAAO,eAAef,EAASnL,IAGtCgM,EAAKE,OAAO,KAAKpI,GACjBkI,EAAKE,OAAO,UAAU/H,GACtB6H,EAAKE,OAAO,OAAOrD,GACnBmD,EAAKE,OAAO,YAAYH,GACd,OAAP/H,GACDgI,EAAKE,OAAO,KAAKlI,EAAGnJ,OAEZ,OAAPoJ,GACD+H,EAAKE,OAAO,KAAKjI,EAAIpJ,OAGvB4Q,EAAOC,QAAQ,gBAAiB,2BAEhCM,EAAO,CACLlI,KACAK,UACA0E,OACAkD,aAEQ,OAAP/H,IACDgI,EAAKhI,GAAKA,EAAGnJ,OAEL,OAAPoJ,IACD+H,EAAK/H,IAAMA,EAAIpJ,OAKnBsR,IACGC,KAAK7M,OAAO8M,KAAO,kBAAmBL,EAAMP,GAC5Ca,KAAK,SAAAC,GACAA,EAAIP,KAAKQ,OAAS,GAClBtN,EAAKkL,gBACLlL,EAAKkH,SAAS,CACZkD,YAAY,IAEdmD,aAAM,uBACNvN,EAAKmJ,eACLnJ,EAAKoJ,gBAEPmE,aAAMF,EAAIP,KAAKU,YAhJJxN,EAoJnBpH,UAAY,SAAC8B,EAAI+S,GACf,GAA0B,KAAvBzN,EAAKlK,MAAMG,gBAAyCC,IAAvB8J,EAAKlK,MAAMG,UAAsB,KAEzDsW,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAOAE,EAAO,CACX7W,UAAW+J,EAAKlK,MAAMG,UACtByE,MACA+S,aACAC,YAAa,QACbC,cAAe,WAEjBV,IACCC,KAAK7M,OAAO8M,KAAO,eAAgBL,EAAMP,GACzCa,KAAK,SAAAC,GAEJ,GAAIA,EAAIP,KAAKQ,OAAS,GAOpB,GANgB,IAAbG,EACDF,aAAM,wBAENA,aAAM,0BAGe,SAApBvN,EAAK6G,MAAM/M,KAAgB,CAC5B,IAAI9C,EAAOgJ,EAAK6G,MAAM7P,KACtBA,EAAOA,EAAK4W,OAAO,SAACrP,GAClB,OAAGA,EAAIhI,KAAKmE,IAOdsF,EAAKkH,SAAS,CAAClQ,eAID,IAAbyW,EACDF,aAAM,iCAENA,aAAM,uCAhMGvN,EA0MnBnH,aAAe,SAAC6B,GACd,IAAImT,EAAO,EAELtB,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAQN,GAAGkB,MAAMC,QAAQrT,GAAK,CACpB,IAAI1D,EAAOgJ,EAAK6G,MAAM7P,KACtB0D,EAAI0D,OAEJ,IAAI0C,EAAI,EACR9J,EAAOA,EAAK4W,OAAO,SAACrP,GAChB,OAAGA,EAAIhI,KAAKmE,EAAIoG,KACdA,KACO,KAMbd,EAAKkH,SAAS,CAAClQ,SACf0D,EAAMsT,KAAKC,UAAUvT,GACrBmT,EAAO,EAGT,IAAMf,EAAO,CACXoB,UAAW,QACXC,MAAO,QACPzT,OAGFuS,IACCC,KAAK7M,OAAO8M,KAAO,kBAAmBL,EAAMP,GAC5Ca,KAAK,SAAAC,GACAA,EAAIP,KAAKQ,OAAS,IACV,IAAPO,EACDN,aAAM,6BAENA,aAAM,+BApPKvN,EA2PnBrH,WAAa,SAAC+B,GACZ,GAA0B,KAAvBsF,EAAKlK,MAAMG,gBAAyCC,IAAvB8J,EAAKlK,MAAMG,UAAsB,CAC/D,IAAI4X,EAAO,EAELtB,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAQN,GAAGkB,MAAMC,QAAQrT,GAAK,CACpB,IAAI1D,EAAOgJ,EAAK6G,MAAM7P,KACtB0D,EAAI0D,OAEJ,IAAI0C,EAAI,EACR9J,EAAOA,EAAK4W,OAAO,SAACrP,GAChB,OAAGA,EAAIhI,KAAKmE,EAAIoG,KACdA,KACO,KAMbd,EAAKkH,SAAS,CAAClQ,SACf0D,EAAMsT,KAAKC,UAAUvT,GACrBmT,EAAO,EAGT,IAAMf,EAAO,CACXoB,UAAWlO,EAAKlK,MAAMG,UACtBkY,MAAO,QACPzT,OAGFuS,IACCC,KAAK7M,OAAO8M,KAAO,gBAAiBL,EAAMP,GAC1Ca,KAAK,SAAAC,GACAA,EAAIP,KAAKQ,OAAS,IACV,IAAPO,EACDN,aAAM,4BAENA,aAAM,+BAtSGvN,EA+SnBlH,UAAY,SAAC4B,GACX,GAA0B,KAAvBsF,EAAKlK,MAAMG,gBAAyCC,IAAvB8J,EAAKlK,MAAMG,UAAsB,CAC/D,IAAI4X,EAAO,EAELtB,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAQN,GAAGkB,MAAMC,QAAQrT,GAAK,CACpB,IAAI1D,EAAOgJ,EAAK6G,MAAM7P,KACtB0D,EAAI0D,OAEJ,IAAI0C,EAAI,EACR9J,EAAOA,EAAK4W,OAAO,SAACrP,GAChB,OAAGA,EAAIhI,KAAKmE,EAAIoG,KACdA,KACO,KAMbd,EAAKkH,SAAS,CAAClQ,SACf0D,EAAMsT,KAAKC,UAAUvT,GACrBmT,EAAO,EAGT,IAAMf,EAAO,CACXoB,UAAWlO,EAAKlK,MAAMG,UACtBmY,KAAM,OACN1T,OAGFuS,IACCC,KAAK7M,OAAO8M,KAAO,eAAgBL,EAAMP,GACzCa,KAAK,SAAAC,GACAA,EAAIP,KAAKQ,OAAS,IACV,IAAPO,EACDN,aAAM,yBAENA,aAAM,6BA1VGvN,EAmWnBjH,YAAc,SAAC2B,GACb,IAAImT,EAAO,EAELtB,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAQN,GAAGkB,MAAMC,QAAQrT,GAAK,CACpB,IAAI1D,EAAOgJ,EAAK6G,MAAM7P,KACtB0D,EAAI0D,OAEJ,IAAI0C,EAAI,EACR9J,EAAOA,EAAK4W,OAAO,SAACrP,GAChB,OAAGA,EAAIhI,KAAKmE,EAAIoG,KACdA,KACO,KAMbd,EAAKkH,SAAS,CAAClQ,SACf0D,EAAMsT,KAAKC,UAAUvT,GACrBmT,EAAO,EAGT,IAAMf,EAAO,CACXoB,UAAW,QACXE,KAAM,OACN1T,OAGFuS,IACCC,KAAK7M,OAAO8M,KAAO,iBAAkBL,EAAMP,GAC3Ca,KAAK,SAAAC,GACAA,EAAIP,KAAKQ,OAAS,IACV,IAAPO,EACDN,aAAM,6BAENA,aAAM,+BA7YKvN,EAoZnBqO,UAAY,SAAC1a,GAAM,IAEX4Y,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAJH1M,EAAK6G,MAAM8F,IAArBC,QAQFjD,EAAO,GACPvE,EAAUpF,EAAK6G,MAAMwF,iBAAiBvD,oBAGxCa,EADC3J,EAAK6G,MAAM6E,eACL3C,aAAgBC,wBAAa5D,IAE7B6D,KAAYD,wBAAa5D,IAGlC,IAAIN,EAAM1J,SAASuI,eAAe,MAC9BoB,EAAM3J,SAASuI,eAAe,OAC9BiB,EAAKxJ,SAASuI,eAAe,MAAMhI,MACnCsJ,EAAU7J,SAASuI,eAAe,WAAWhI,MAE7CmR,EAAO,GAEX,GAAG9M,EAAK6G,MAAMuD,WAAW,CACvB,IAAItJ,EAAE,EACNgM,EAAO,IAAIC,SAIX,IAFA,IAAId,EAAWjM,EAAK6G,MAAMuD,WAErBtJ,EAAEmL,EAASlY,OAAO+M,IACrBgM,EAAKE,OAAO,eAAef,EAASnL,IAGtCgM,EAAKE,OAAO,KAAKpI,GACjBkI,EAAKE,OAAO,UAAU/H,GACtB6H,EAAKE,OAAO,OAAOrD,GAET,OAAP7E,GACDgI,EAAKE,OAAO,KAAKlI,EAAGnJ,OAEZ,OAAPoJ,GACD+H,EAAKE,OAAO,MAAMjI,EAAIpJ,OAGxB4Q,EAAOC,QAAQ,gBAAiB,2BAGhCM,EAAO,CACLlI,KACAK,UACA0E,QAEQ,OAAP7E,IACDgI,EAAKhI,GAAKA,EAAGnJ,OAEL,OAAPoJ,IACD+H,EAAK/H,IAAMA,EAAIpJ,OAInBsR,IACGC,KAAK7M,OAAO8M,KAAO,kBAAmBL,EAAMP,GAC5Ca,KAAK,SAAAC,GACAA,EAAIP,KAAKQ,OAAS,GAEpBtN,EAAKsO,cACLtO,EAAKkH,SAAS,CACZlB,OAAO,IAETuH,aAAM,wBAENA,aAAMF,EAAIP,KAAKU,YA7dJxN,EAkenBsO,YAAc,WACRlT,SAASuI,eAAe,QAC1BvI,SAASuI,eAAe,MAAMhI,MAAQ,GACtCP,SAASuI,eAAe,MAAMhI,MAAQ,GACtCP,SAASuI,eAAe,OAAOhI,MAAQ,GACvCP,SAASuI,eAAe,WAAWhI,MAAQ,GAC3CP,SAASuI,eAAe,cAAchI,MAAQ,GAC9CqE,EAAKkH,SAAS,CACZmF,iBAAkBvF,eAAYC,cAC9BqD,YAAY,MA3eCpK,EAifnBuO,cAAgB,SAAAC,GAAS,OAAI,WACtBA,IACHxO,EAAKkH,SAAS,CACZlB,OAAQhG,EAAK6G,MAAMb,QAErBhG,EAAKsO,iBAtfUtO,EA0fnByO,WAAa,WACXzO,EAAKkH,SAAS,CACZlB,OAAO,EACPzC,UAAW,YA7fIvD,EAigBnBkE,WAAa,SAAAwK,GACX,IAAI5J,EAAM1J,SAASuI,eAAe,MAAMhI,MACpCoJ,EAAM3J,SAASuI,eAAe,OAAOhI,MACrCiJ,EAAKxJ,SAASuI,eAAe,MAAMhI,MACnCsJ,EAAU7J,SAASuI,eAAe,WAAWhI,MAC7C+H,EAAoBtI,SAASuI,eAAe,cAAcC,MAC1DwB,EAAUpF,EAAK6G,MAAMwF,iBAAiBvD,oBAC1C9I,EAAKkH,SAAS,CACZ3D,UAAWmL,EACX9J,KACAE,KACAC,MACAE,UACAG,UACA1B,uBA/gBe1D,EAmhBnB2O,aAAe,SAAAC,GAEb,IAAI9J,EAAK,GACLC,EAAM,GACN6F,EAAO,GACPhG,EAAG,GAEHuG,EAAK,GACLtD,EAAK,GACLC,EAAM,GACNC,EAAO,GACP4B,EAAO,GACP1E,EAAU,GAEd,GAAG2J,EAAK,CACN9J,EAAI8J,EAAK9J,GACT+C,EAAO+G,EAAK9J,GAEZC,EAAM6J,EAAK7J,IACX+C,EAAQ8G,EAAK7J,IAGb6F,EAAOgE,EAAKhE,KACZ7C,EAAS6G,EAAKhE,KAEdhG,EAAIgK,EAAKhK,GACTuG,EAAOyD,EAAKhK,GAEZ+E,EAAOiF,EAAKjF,KACZ1E,EAAU2J,EAAK3J,QACf,IAAIqC,EAAS,6CACfA,GAAU,SAASsD,EAAK,OAErB9F,EAAG/Q,OAAS,IACbuT,GAAU,OAAOxC,EAAG,QAGnBC,EAAIhR,OAAS,IACduT,GAAU,QAAQvC,EAAI,QAGxB,IACMxF,EAAO,IAAIsP,KAAe,IAAVD,EAAKrP,MACrBuP,EAAOvP,EAAKwP,cACZC,EAHW,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAG3DzP,EAAK0P,YACxBC,EAAM3P,EAAK4P,UACXC,EAAQ7P,EAAK8P,WACbC,EAAU,IAAM/P,EAAKgQ,aAQ3B,GALAjI,GAAS,UAFP/H,EAAO2P,EAAI,IAAIF,EAAM,IAAIF,EAAK,IAAIM,EAAQ,IAAME,EAAQhQ,QAAQ,IAE3C,OACvBgI,GAAS,YAAYrC,EAAQ,OAC7BqC,GAAQ,OAAO1C,EAAG,eAElB0C,GAAQsH,EAAKjF,KACY,IAAtBiF,EAAKhF,eAAmB,CACzBtC,GAAQ,WACR,IAAIxG,EAAE,EACN,IAAIA,EAAE,EAAEA,EAAE8N,EAAKxE,WAAWrW,OAAO+M,IAC/BwG,GAAQ,gBAAgBjH,OAAOyJ,SAAS0F,OAAOZ,EAAKxE,WAAWtJ,GAAhB,IAA0B,qBAAqB8N,EAAKxE,WAAWtJ,GAAhB,KAA2B,YAG3HwG,GAAQ,QAIRtH,EAAKkH,SAAS,CACZpN,KAAM,QACNmL,UACA0E,OACA5B,SACA6C,OACAO,OACAvG,KACAiD,OACA/C,KACAgD,QACA/C,MACAxF,OACAkQ,KAAM,EACNnI,SACA5M,IAAKkU,EAAKlU,IACVmS,UAAW+B,EAAK/B,cArmBH7M,EA0mBnBoJ,aAAe,WAIb,IAJmB,IACbK,EAAWzJ,EAAK6G,MAAhB4C,OACFiG,EAAYjG,EAAO1V,OAEf+M,EAAE,EAAEA,EAAE4O,EAAU5O,IACtB2I,EAAO3I,GAAGc,QAAS,EAGrB5B,EAAKkH,SAAS,CACZuC,YAnnBezJ,EAynBnBoL,aAAe,SAAAlX,GAIb,IAJqB,IACfuV,EAAWzJ,EAAK6G,MAAhB4C,OACFiG,EAAYjG,EAAO1V,OAEf+M,EAAE,EAAEA,EAAE4O,EAAU5O,IACtB2I,EAAO3I,GAAGc,QAAS,EAGrB6H,EAAOvV,GAAO0N,QAAS,EAEvB5B,EAAK2O,aAAalF,EAAOvV,KAnoBR8L,EAwoBnB2P,YAAc,SAACjV,GAIb,IAJqB,IAEjBkV,EADW5P,EAAK6G,MAAd7P,KACSjD,OACX+M,EAAG,EACFA,EAAE8O,KACF5P,EAAK6G,MAAMgJ,aAAa/O,GAAGgP,KAAKjV,QAAQH,IAAM,GADxCoG,KAKX,OAAOA,GAjpBUd,EAopBnB+P,aAAe,WACX/P,EAAKkH,SAAS,CACZpN,KAAM,cAtpBOkG,EA0pBnBtH,UAAY,SAAAgC,GACV,GAA0B,KAAvBsF,EAAKlK,MAAMG,gBAAyCC,IAAvB8J,EAAKlK,MAAMG,UAAsB,CAC/D,IAAI+Z,EAAYhQ,EAAK2P,YAAYjV,GACnC2F,OAAO4P,SAAS,EAAG,GAEnBjQ,EAAKkH,SAAS,CACZuI,KAAM,EACNzY,KAAM,KAER,IAAMuV,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAY1M,EAAK6G,MAAM8F,IAAIC,QAMxCE,EAAO,CACXoD,OAAQlQ,EAAKlK,MAAMG,UACnBka,YAAanQ,EAAK6G,MAAMgJ,aAAaG,GAAxB,KACbI,WAAY,GAGdnD,IACGC,KAAK7M,OAAO8M,KAAO,SAAUL,EAAMP,GACnCa,KAAK,SAAAC,GACe,MAAfA,EAAIgD,QAAkBhD,EAAIP,KAAK/Y,OAAS,GAC1CiM,EAAK2O,aAAatB,EAAIP,KAAK,IAC3B9M,EAAKkH,SAAS,CACZuC,OAAW4D,EAAIP,OAEjB9M,EAAKoJ,iBAGNpJ,EAAKkH,SAAS,CACXpN,KAAM,SAERkG,EAAKwK,mBAhsBMxK,EAguBnB6K,YAAc,SAACyF,GACb,IACI/Q,EAAO,IAAIsP,KAAa,IAARyB,GAChBxB,EAAOvP,EAAKwP,cACZC,EAHa,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAG7DzP,EAAK0P,YACxBC,EAAM3P,EAAK4P,UACXC,EAAQ7P,EAAK8P,WACbC,EAAU,IAAM/P,EAAKgQ,aAMzB,OALAhQ,EAAO2P,EAAI,IAAIF,EAAM,IAAIF,EAAK,IAAIM,EAAQ,IAAME,EAAQhQ,QAAQ,GAItD,GAAAvE,OAFCwE,IA1uBMS,EAgvBnBwK,YAAc,WACZ,GAA0B,KAAvBxK,EAAKlK,MAAMG,gBAAyCC,IAAvB8J,EAAKlK,MAAMG,UAAsB,CAC/D+J,EAAKkH,SAAS,CACZuI,KAAM,EACNzY,KAAM,KAGR,IAAMuV,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAY1M,EAAK6G,MAAM8F,IAAIC,QAIxCE,EAAO,CACXoD,OAAQlQ,EAAKlK,MAAMG,UACnBma,WAAY,GAGdnD,IACGC,KAAK7M,OAAO8M,KAAO,UAAWL,EAAMP,GACpCa,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIgD,OAAgB,CAEtB,IAAIE,EAAQ,GACRC,EAAU,GACV5E,EAAU,EACV3V,EAAY+J,EAAKlK,MAAMG,WAC3BA,EAAYA,EAAUE,eACTsa,OAAO,WAAa,IAC/B7E,EAAU,GAGZ,IAAK,IAAI9K,EAAI,EAAGA,EAAIuM,EAAIP,KAAK/Y,OAAQ+M,IAAK,CACxC,IAEIvB,EAAO,IAAIsP,KAAsB,IAAjBxB,EAAIP,KAAKhM,GAAGvB,MAC5BuP,EAAOvP,EAAKwP,cACZC,EAHa,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAG7DzP,EAAK0P,YAIxByB,EAHMnR,EAAK4P,UAGC,IAAIH,EAAM,IAAIF,EAAK,IAFvBvP,EAAK8P,WAE8B,KADjC,IAAM9P,EAAKgQ,cACoCjQ,QAAQ,GAEpD+N,EAAIP,KAAKhM,GAAG8I,eAC7B2G,EAAMzP,GAAK6K,GACT0B,EAAIP,KAAKhM,GAAGpG,IACZkR,EACAyB,EAAIP,KAAKhM,GAAG8J,KACZyC,EAAIP,KAAKhM,GAAGmE,QAfH/O,EAiBTya,EACAD,GAEHF,EAAQ1P,GAAKuM,EAAIP,KAAKhM,GAAG2I,OAGvB8G,EAAMxc,OAAS,EAChBiM,EAAKkH,SAAS,CACZlQ,KAAMuZ,EACNV,aAAcW,EACdf,KAAM,IAGRzP,EAAKkH,SAAS,CACZlQ,KAAM,GACN6Y,aAAc,GACdJ,KAAM,SAnzBDzP,EA4zBnB4Q,aAAe,SAACC,GACd,GAA0B,KAAvB7Q,EAAKlK,MAAMG,gBAAyCC,IAAvB8J,EAAKlK,MAAMG,UAAsB,CAC/D+J,EAAKkH,SAAS,CACZuI,KAAM,EACNzY,KAAM,KAGR,IAAMuV,EAAS,CACbC,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAY1M,EAAK6G,MAAM8F,IAAIC,QAIxCE,EAAO,CACXoB,UAAWlO,EAAKlK,MAAMG,UACtB6a,MAAOD,GAGT5D,IACGC,KAAK7M,OAAO8M,KAAO,iBAAkBL,EAAMP,GAC3Ca,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIgD,OAAgB,CAGtB,IAFA,IAAIE,EAAQ,GACRC,EAAU,GACL1P,EAAI,EAAGA,EAAIuM,EAAIP,KAAK/Y,OAAQ+M,IAAK,CACxC,IACI4P,EAAQ,IAAI7B,KAAKxB,EAAIP,KAAKhM,GAAGvB,MAAMwR,mBAAmB,QAAS,CACjE/B,MAAO,UACPE,IAAK,UACLJ,KAAM,YAGSzB,EAAIP,KAAKhM,GAAG8I,eAC7B2G,EAAMzP,GAAK6K,GACT0B,EAAIP,KAAKhM,GAAGpG,IACZ,EACA2S,EAAIP,KAAKhM,GAAG8J,KAAK,GAAGoG,KACpB3D,EAAIP,KAAKhM,GAAGmE,QAZH/O,EAcTya,EACAD,GAEHF,EAAQ1P,GAAKuM,EAAIP,KAAKhM,GAAG0P,QAKtBD,EAAMxc,OAAS,EACjBiM,EAAKkH,SAAS,CACZlQ,KAAMuZ,EACNV,aAAcW,EACdf,KAAM,IAGRzP,EAAKkH,SAAS,CACZlQ,KAAM,GACN6Y,aAAcW,EACdf,KAAM,SAt3BDzP,EA+3BnBiR,cAAgB,WACdjR,EAAKwK,eA93BLxK,EAAK6G,MAAQ,CACX8F,IAAK7W,EAAMgU,SAASjD,MACpB7P,KAAM,GACNka,MAAO3Y,GACPhF,MAAO,GACPkc,KAAM,EACNzJ,OAAO,EACPmL,gBAAgB,EAChBC,qBAAqB,EACrBC,cAAc,EACdC,UAAU,EACVxX,KAAM,OACNY,IAAK,GACL2Q,UAAU,GACVpG,QAAS,GACT0E,KAAM,GACN/E,GAAI,GACJuG,KAAM,GACNpD,OAAQ,GACR6C,KAAM,GACN/C,KAAM,GACN/C,GAAI,GACJgD,MAAM,GACN/C,IAAK,GACLxF,KAAM,GACN+H,OAAO,GACPlC,QAAS,GACT1B,kBAAmB,GACnB9B,QAAQ,EACRyK,iBAAkBvF,eAAYC,cAC9Ba,YAAY,EACZwC,WAAY,GACZO,eAAgB,EAChBlB,OAAQ,GACRoG,aAAc,GACdhD,UAAW,GACXnB,gBAAgB,EAChB6F,mBAAmB,EACnBC,WAAY,GACZjO,UAAW,UAzCIvD,uEAusBiB9J,IAA9BiK,KAAKrK,MAAMgU,SAASjD,OAEtB1G,KAAKrK,MAAM6S,QAAQ8I,KAAK,qDAGTC,GAUjB,GARIvR,KAAKrK,MAAMG,YAAcyb,EAAUzb,YACrCkK,KAAK+G,SAAS,CACZpN,KAAM,OACNvG,MAAO4M,KAAKrK,MAAMG,YAEpBkK,KAAKqK,eAGJrK,KAAKrK,MAAM6b,aAAeD,EAAUC,WAAW,CAChDxR,KAAK+G,SAAS,CACZpN,KAAM,SAGR,IAAI+W,EAAO1Q,KAAKrK,MAAM6b,WACtBxR,KAAKyQ,aAAaC,qCAyKpB,OACE/d,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACE1D,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,KACEhR,EAAAC,EAAAC,cAAC4e,GAAA,EAAD,OAEF9e,EAAAC,EAAAC,cAAC6e,EAAD,CAAMvf,UAAU,kBACQ,SAApB6N,KAAK0G,MAAM/M,MAAuC,SAApBqG,KAAKrK,MAAMgE,OACzChH,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KAC8B,IAA3B2J,KAAK0G,MAAM7P,KAAKjD,QAAoC,IAApBoM,KAAK0G,MAAM4I,MAC1C3c,EAAAC,EAAAC,cAAA,KAAGsJ,MAAO,CAAEpE,QAAS,KAArB,mBAGmB,IAApBiI,KAAK0G,MAAM4I,MACV3c,EAAAC,EAAAC,cAAA,OAAKV,UAAU,mBACbQ,EAAAC,EAAAC,cAAC8e,EAAA,EAAD,CACE7c,MAAO,SACPqH,MAAO,CACLhF,MAAO,QACPS,OAAQ,QACRga,UAAW,WAEZ,KAIqB,IAA3B5R,KAAK0G,MAAM7P,KAAKjD,QACfjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,SAAP,KACE1D,EAAAC,EAAAC,cAACqX,GAAA,EAAD,CAAM/X,UAAU,iBACdQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CAAS1O,QAASsJ,KAAK4P,cACrBjd,EAAAC,EAAAC,cAACiE,EAAA,EAAD,SAINnE,EAAAC,EAAAC,cAACgf,EAAD,CACEhb,KAAMmJ,KAAK0G,MAAM7P,KACjBib,WAAY9R,KAAK0G,MAAM7P,KAAKjD,OAC5BwE,UAAW4H,KAAK0G,MAAMqK,MACtBlb,WAAYmK,KAAKrK,MAAMG,UACvBuC,iBAAiB,WACjBC,eAAe,EACf3C,MAAOqK,KAAKrK,MACZ4C,UAAWyH,KAAKzH,UAChBC,WAAYwH,KAAKxH,WACjBE,aAAcsH,KAAKtH,aACnBD,UAAauH,KAAKvH,UAClBE,UAAaqH,KAAKrH,UAClBC,YAAeoH,KAAKpH,YACpBC,WAAcmH,KAAKrK,MAAMkD,cAK9BmH,KAAK0G,MAAMb,OAASlT,EAAAC,EAAAC,cAACkf,GAAD,CACKlM,MAAS7F,KAAK0G,MAAMb,MACpBzC,UAAapD,KAAK0G,MAAMtD,UACxBqB,GAAMzE,KAAK0G,MAAMjC,GACjBE,GAAM3E,KAAK0G,MAAM/B,GACjBC,IAAO5E,KAAK0G,MAAM9B,IAClBE,QAAW9E,KAAK0G,MAAM5B,QACtBG,QAAWjF,KAAK0G,MAAMzB,QACtB1B,kBAAqBvD,KAAK0G,MAAMnD,kBAChCyO,eAAkBhS,KAAKoO,cACvBnK,WAAcjE,KAAKsO,WACnBvK,WAAc/D,KAAK+D,WACnBgC,QAAW/F,KAAKrK,MAAMxD,UACtBiS,UAAapE,KAAKkO,UAClBlJ,aAAgBhF,KAAK0G,MAAMwF,iBAC3B/G,oBAAsBnF,KAAKiM,yBAC3BvG,kBAAqB1F,KAAKyI,iBAC1BxB,SAAYjH,KAAK0G,MAAM6E,kBAIhC,IAApBvL,KAAK0G,MAAM4I,MAAkC,SAApBtP,KAAK0G,MAAM/M,MACnChH,EAAAC,EAAAC,cAACof,EAAA,UAAD,KACEtf,EAAAC,EAAAC,cAACof,EAAA,OAAD,CACEC,QAAQ,gBACRC,QAAQ,EACRzb,QAASsJ,KAAKoO,iBAEdzb,EAAAC,EAAAC,cAACiE,EAAA,EAAD,QAIe,UAApBkJ,KAAK0G,MAAM/M,MAAoBhH,EAAAC,EAAAC,cAACuf,GAAD,CACIvZ,WAAcmH,KAAK0G,MAAM7N,WACzByQ,OAAWtJ,KAAK0G,MAAM4C,OACtBvC,SAAY/G,KAAK+L,YACjB1B,YAAerK,KAAKqK,YACpB7R,WAAcwH,KAAKxH,WACnBG,UAAaqH,KAAKrH,UAClB2R,aAAgBtK,KAAK0G,MAAM8D,eAC3B/R,UAAauH,KAAKvH,UAClBiS,YAAa1K,KAAK0K,YAClBjJ,OAAUzB,KAAK0G,MAAMjF,OACrBsJ,cAAiB/K,KAAK+K,cACtBhC,WAAc/I,KAAK+I,WACnBC,aAAchJ,KAAKgJ,aACnB7B,OAAQnH,KAAK0G,MAAMS,OACnBM,WAAYzH,KAAK0G,MAAMe,WACvBgB,iBAAkBzI,KAAKyI,iBACvBwC,aAAgBjL,KAAKiL,aACrBhC,aAAgBjJ,KAAKiJ,aACrBhC,SAAUjH,KAAK0G,MAAM6E,iBAEpC,aAApBvL,KAAK0G,MAAM/M,MAAuBhH,EAAAC,EAAAC,cAACwf,GAAD,CACGxZ,WAAcmH,KAAK0G,MAAM7N,WACzBkO,SAAY/G,KAAK+L,YACjB1B,YAAerK,KAAKqK,YACpBpD,SAAYjH,KAAK0G,MAAM6E,0BAp/B/CrT,IAAM0I,WA4/Bf0R,sBAAWzG","file":"static/js/4.dd7fe492.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React,{ useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { FaTrashRestore, FaTrash, FaExclamationTriangle, FaInbox } from \"react-icons/fa\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    headCells,\n    onRequestSort,\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  headCells: PropTypes.object.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected, tableTitle } = props;\n  \n  let curFolder = (tableTitle!=undefined) ? tableTitle.toLowerCase(): '';\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\">{numSelected} selected</Typography>\n        ) : (\n          <Typography id=\"tableTitle\">{tableTitle}</Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 && (\n            <React.Fragment>\n            {(curFolder.match(\"spam\") === null) ? <Tooltip title=\"Mark as spam\">\n              <IconButton \n                  aria-label=\"spam\" \n                  onClick = {() => { \n                            props.unselectAll();\n                            props.spamEmails(props.rows);\n                }}>\n              <FaExclamationTriangle />\n            </IconButton>\n            </Tooltip>:<Tooltip title=\"Not Spam\">\n              <IconButton \n                aria-label=\"unspam\" \n                onClick = {() => { \n                        props.unselectAll();\n                        props.unspamEmails(props.rows);\n                }}>\n              <FaInbox />\n            </IconButton>\n            </Tooltip>\n            }  \n            {(curFolder.match(\"trash\") === null) ? <Tooltip title=\"Move to trash\">\n              <IconButton \n                  aria-label=\"delete\" \n                  onClick = {() => { \n                            props.unselectAll();\n                            props.trashEmails(props.rows);\n                }}>\n              <FaTrash />\n            </IconButton>\n            </Tooltip>:<React.Fragment>\n              <Tooltip title=\"Delete emails\">\n              <IconButton\n                aria-label=\"delete\" \n                onClick = {() => { \n                            props.unselectAll();\n                            props.trashEmails(props.rows);\n                }}>\n              <FaTrash />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Restore emails\">\n              <IconButton \n                aria-label=\"undelete\" \n                onClick = {() => { \n                        props.unselectAll();\n                        props.untrashEmails(props.rows);\n                }}>\n              <FaTrashRestore />\n            </IconButton>\n            </Tooltip>\n            </React.Fragment>\n            }\n            </React.Fragment>\n        )}\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  tableTitle: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    // marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst EnhancedTable = ({\n  rows,\n  headCells,\n  tableTitle,\n  labelRowsPerPage,\n  showEmptyRows,\n  props,\n  showEmail,\n  trashEmail,\n  starEmail,\n  untrashEmail,\n  spamEmail,\n  unspamEmail,\n  breakpoint\n}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('id');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  \n \n\n  const [rowsPerPage, setRowsPerPage] = React.useState(30);\n  labelRowsPerPage = labelRowsPerPage ? labelRowsPerPage : 'Per page';\n  showEmptyRows = typeof showEmptyRows == 'undefined' ? true : showEmptyRows;\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const unselectAll = ev =>{\n      setSelected([]);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const openEmail = (event, uid) => {\n    showEmail(uid);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const toggleStar = (e, id) => {\n    e.preventDefault();\n    let el = document.querySelector('#star-' + id);\n    let sFlag = el.getAttribute('data-starred');\n    \n    if (sFlag === '1') {\n      starEmail(id,0);\n    } else {\n      starEmail(id,1);\n    }  \n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  \n  useEffect(() => {\n      if(breakpoint==='xs'){\n        setDense(true);\n      }\n      \n  });\n  \n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          spacing={0}\n          className={classes.root}\n          style={{ borderBottom: '1px solid inherit' }}\n        >\n          <Grid item xs style={{ paddingLeft: 4 }}>\n            <Checkbox\n              indeterminate={\n                selected.length > 0 && selected.length < rows.length\n              }\n              checked={selected.length === rows.length}\n              onChange={handleSelectAllClick}\n              inputProps={{ 'aria-label': 'select all' }}\n            />\n          </Grid>\n          <Grid item xs>\n            <EnhancedTableToolbar\n              numSelected={selected.length}\n              tableTitle={tableTitle}\n              rows={selected}\n              trashEmails={trashEmail}\n              unselectAll={unselectAll}\n              untrashEmails={untrashEmail}\n              spamEmails={spamEmail}\n              unspamEmails={unspamEmail}\n            />\n          </Grid>\n          <Grid item xs>\n            <TablePagination\n              rowsPerPageOptions={[30, 50, 100]}\n              labelRowsPerPage={labelRowsPerPage}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              backIconButtonProps={{\n                'aria-label': 'previous page',\n              }}\n              nextIconButtonProps={{\n                'aria-label': 'next page',\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Grid>\n        </Grid>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            striped\n          >\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  \n                  if(breakpoint==='xs'){\n                    return(<React.Fragment>\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.id}\n                        selected={isItemSelected}\n                        className=\"hl-tr\"\n                      >\n                      <TableCell\n                          padding=\"checkbox\"\n                          onClick={event => handleClick(event, row.id)}\n                          rowSpan={5}\n                        >\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{ 'aria-labelledby': labelId }}\n                          />\n                        </TableCell> \n                       </TableRow>\n                        {Object.keys(row).map((row_key, row_key_index) => {\n                          if (row_key !== 'id') {\n                            if (row_key === 'starred') {\n                              let ri = <TableCell>\n                              <span\n                                id={'star-' + row.id}\n                                onClick={e => toggleStar(e, row.id)}\n                                data-starred={row[row_key]}\n                                className=\"starred\"\n                              >\n                                {row[row_key] === 1 ? '\\u2605' : '\\u2606'}\n                              </span>\n                            </TableCell>;\n                                  return (\n                                    <TableRow>\n                                      {ri}\n                                    </TableRow>\n                                  );\n                                  \n                              \n                              \n                            } else if (row_key === 'subject') {\n                              \n                              let maxText=30;\n                              let ri = <TableCell\n                                            onClick={event => openEmail(event,row.id)}\n                                        >\n                                          {row[row_key].substr(0, maxText)}...\n                                        </TableCell>;\n  \n                                \n                                  return (\n                                    <TableRow>\n                                      {ri}\n                                    </TableRow>\n                                  );\n                              \n                              \n                            } else if (row_key === 'attachment') {\n                              /*return (\n                                <TableRow>\n                                <TableCell>\n                                  {row[row_key] === 1 ? '\\u1F4CE' : ''}\n                                </TableCell>\n                                </TableRow>\n                              );*/\n                            }else if(row_key==='timestamp'){\n                              let date = row[row_key].split(\" \");\n                              date = date[0];\n                              let ri = <TableCell\n                                onClick={event => openEmail(event,row.id)}\n                              >\n                                {date}\n                              </TableCell>;\n    \n                                    return (\n                                      <TableRow>\n                                        {ri}\n                                      </TableRow>\n                                    );\n                            }else{\n                              let ri = <TableCell\n                                onClick={event => openEmail(event, row.id)}\n                              >\n                                <strong>{row[row_key]}</strong>\n                              </TableCell>;\n    \n                                  return (\n                                    <TableRow>\n                                      {ri}\n                                    </TableRow>\n                                  );\n                              \n                              \n                            }\n                          }\n                          return null;\n                        })}\n                        </React.Fragment>\n                    );\n                  \n                  }else{\n                    return(<TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                      className=\"hl-tr\"\n                    >\n                    <TableCell\n                        padding=\"checkbox\"\n                        onClick={event => handleClick(event, row.id)}\n                        rowSpan={1}\n                      >\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell> \n                     \n                      {Object.keys(row).map((row_key, row_key_index) => {\n                        if (row_key !== 'id') {\n                          if (row_key === 'starred') {\n                            let ri = <TableCell>\n                            <span\n                              id={'star-' + row.id}\n                              onClick={e => toggleStar(e, row.id)}\n                              data-starred={row[row_key]}\n                              className=\"starred\"\n                            >\n                              {row[row_key] === 1 ? '\\u2605' : '\\u2606'}\n                            </span>\n                          </TableCell>;\n                              return ri;\n                              \n                          } else if (row_key === 'subject') {\n                            \n                            let ri = <TableCell\n                                          onClick={event => openEmail(event,row.id)}\n                                      >\n                                        {row[row_key].substr(0, 40)}...\n                                      </TableCell>;\n\n                              \n                             \n                                return ri;\n                             \n                            \n                          } else if (row_key === 'attachment') {\n                            /*return (\n                              <TableRow>\n                              <TableCell>\n                                {row[row_key] === 1 ? '\\u1F4CE' : ''}\n                              </TableCell>\n                              </TableRow>\n                            );*/\n                          }else if(row_key==='timestamp'){\n                            let date = row[row_key];\n                            let ri = <TableCell\n                              onClick={event => openEmail(event,row.id)}\n                            >\n                              {date}\n                            </TableCell>;\n  \n                                  return ri;\n                          }else{\n                            let ri = <TableCell\n                              onClick={event => openEmail(event,row.id)}\n                            >\n                              {row[row_key]}\n                            </TableCell>;\n  \n                           return ri;\n                            \n                            \n                          }\n                        }\n                        return null;\n                      })}\n                      </TableRow>\n                  );\n                }\n            })}\n              {emptyRows > 0 && showEmptyRows && (\n                <TableRow\n                  key=\"t1\"\n                  style={{ height: (dense ? 33 : 53) * emptyRows }}\n                >\n                  <TableCell colSpan={headCells.length + 1} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[30, 50, 100]}\n          labelRowsPerPage={labelRowsPerPage}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(EnhancedTable);\n","/* eslint-disable react/no-multi-comp */\nimport React, { Component } from 'react';\n\nimport Editor, { createEditorStateWithText } from 'draft-js-plugins-editor';\n\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css';\nimport createUndoPlugin from 'draft-js-undo-plugin';\nimport 'draft-js-undo-plugin/lib/plugin.css';\nimport {\n  ItalicButton,\n  BoldButton,\n  UnderlineButton,\n  HeadlineOneButton,\n  HeadlineTwoButton,\n  HeadlineThreeButton,\n  UnorderedListButton,\n  OrderedListButton,\n  BlockquoteButton,\n} from 'draft-js-buttons';\n\nclass HeadlinesPicker extends Component {\n  componentDidMount() {\n    setTimeout(() => { window.addEventListener('click', this.onWindowClick); });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onWindowClick);\n  }\n\n  onWindowClick = () =>\n    // Call `onOverrideContent` again with `undefined`\n    // so the toolbar can show its regular content again.\n    this.props.onOverrideContent(undefined);\n\n  render() {\n    const buttons = [HeadlineOneButton, HeadlineTwoButton, HeadlineThreeButton];\n    return (\n      <div>\n        {buttons.map((Button, i) => // eslint-disable-next-line\n          <Button key={i} {...this.props} />\n        )}\n      </div>\n    );\n  }\n}\n\nclass HeadlinesButton extends Component {\n  onClick = () =>\n    // A button can call `onOverrideContent` to replace the content\n    // of the toolbar. This can be useful for displaying sub\n    // menus or requesting additional information from the user.\n    this.props.onOverrideContent(HeadlinesPicker);\n\n  render() {\n    return (\n      <div className='headlineButtonWrapper'>\n        <button onClick={this.onClick} className='headlineButton'>\n          H\n        </button>\n      </div>\n    );\n  }\n}\n\nconst toolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = toolbarPlugin;\n\nconst undoPlugin = createUndoPlugin();\nconst { UndoButton, RedoButton } = undoPlugin;\n\nconst plugins = [toolbarPlugin, undoPlugin];\n\nexport default class CustomToolbarEditor extends Component {\n\n  focus = () => {\n    this.editor.focus();\n  };\n\n  render() {\n\n    return (\n      <div>\n        <div className='editor' onClick={this.focus}>\n          <Editor\n            editorState={this.props.editorState}\n            onChange={this.props.onEditorStateChange}\n            plugins={plugins}\n            ref={(element) => { this.editor = element; }}\n          />\n          <Toolbar>\n            {\n              // may be use React.Fragment instead of div to improve perfomance after React 16\n              (externalProps) => (\n                <div>\n                  <UndoButton {...externalProps} className='cm-w-30p cm-h-30p' />\n                  <RedoButton {...externalProps} className='cm-w-30p cm-h-30p' />\n                  <Separator {...externalProps} />\n                  <BoldButton {...externalProps} />\n                  <ItalicButton {...externalProps} />\n                  <UnderlineButton {...externalProps} />\n                  <Separator {...externalProps} />\n                  <HeadlinesButton {...externalProps} />\n                  <UnorderedListButton {...externalProps} />\n                  <OrderedListButton {...externalProps} />\n                  <BlockquoteButton {...externalProps} />\n                </div>\n              )\n            }\n          </Toolbar>\n        </div>\n      </div>\n    );\n  }\n}","import React, { useState, useEffect } from 'react';\nimport {\n    Button as RButton,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n    Row,\n    Col,\n    FormText,\n    Modal,\n    ModalBody,\n} from 'reactstrap';\nimport { MdAttachFile } from \"react-icons/md\";\n// import { Editor } from 'react-draft-wysiwyg';\nimport CustomToolbarEditor from 'components/customEditor';\nimport Dock from 'react-dock';\nimport {\n  RiSendPlaneLine,\n} from 'react-icons/ri';\nimport {\n  FaWindowMaximize,\n  FaRegWindowMinimize,\n} from 'react-icons/fa';\nimport {isMobile} from 'react-device-detect';\n\n\nconst dockStyles = {\n  position: 'fixed',\n  zIndex: 1,\n  boxShadow: '0 0 4px rgba(0, 0, 0, 0.3)',\n  background: 'white',\n  left: isMobile ? '10px' : 'unset',\n  top: 'unset',\n  width: isMobile ? '90%' : '40%',\n  height: isMobile ? '100%' : '70%',\n  right: '10px',\n  bottom: '5px',\n  'border-radius': '15px 15px 0px 0px',\n  overflow: 'hidden',\n};\n\nconst minDockStyles = {\n  position: 'fixed',\n  zIndex: 1,\n  boxShadow: '0 0 4px rgba(0, 0, 0, 0.3)',\n  background: 'white',\n  left: 'unset',\n  top: 'unset',\n  width: '25%',\n  height: '10%',\n  right: '10px',\n  bottom: '5px',\n  'border-radius': '15px 15px 0px 0px',\n  overflow: 'hidden',\n};\n\nconst composeModal = (props) => {\n\n  const [count, setCount] = useState(0);\n  const dockState = props.dockState;\n\n  let headerLeft, headerRight;\n  let hiddenClass = '',\n      hiddenAction = false;\n\n  if(dockState === \"maximize\"){\n    headerLeft = 8;\n    headerRight = 4;\n  } else if(dockState === \"minimize\"){\n    headerLeft = 7;\n    headerRight = 5;\n    hiddenClass = 'd-none';\n    if(isMobile){\n      hiddenAction = true;\n    }\n  } else {\n    headerLeft = 9;\n    headerRight = 3;\n  }\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    if(props.attachmentContent) {\n      document.getElementById('attachment').files = props.attachmentContent;\n    }\n  });\n\n  const composeContent = (\n    <div className={hiddenClass}>\n      <Row className='bg-secondary text-white ml-0 mr-0 cm-h-30p cm-sticky-header'>\n        <Col md={headerLeft} sm={headerLeft} xs={headerLeft} className='mt-1 mb-1'>\n          <div className='ml-2'> New Email </div>\n        </Col>\n        <Col md={headerRight} sm={headerRight} xs={headerRight} className='mt-1 mb-0'>\n          <Row className='ml-0 mr-0'>\n            <Col md='4' sm='4' xs='4'>\n              <FaRegWindowMinimize \n                className='cm-pointer'\n                onClick = {\n                  () => {\n                    if(dockState === \"minimize\") {\n                      props.resizeDock(\"normal\");\n                    } else {\n                      props.resizeDock(\"minimize\");\n                    }\n                  }\n                }\n                hidden={hiddenAction}\n              />\n            </Col>\n            <Col md='4' sm='4' xs='4'>\n              <FaWindowMaximize \n                className='cm-pointer'\n                onClick = {\n                  () => {\n                    if(dockState === \"maximize\"){\n                      props.resizeDock(\"normal\");\n                    } else {\n                      props.resizeDock(\"maximize\");\n                    }\n                  }\n                }\n                hidden={hiddenAction}\n              />\n            </Col>\n            <Col md='4' sm='4' xs='4'>\n              <span\n                className='font-weight-bold cm-pointer'\n                onClick = {\n                  () => {\n                    props.closemodal();\n                  }\n                }\n              > X </span>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <Form onSubmit={() => { props.sendemail() }} className=\"m-1\">\n        <FormGroup>\n          <Input\n            type=\"text\"\n            name=\"to\"\n            id=\"to\"\n            placeholder=\"To:\"\n            className='cm-h-30p'\n            defaultValue={props.to}\n            required\n          />\n          <Input\n            type=\"text\"\n            name=\"text\"\n            id=\"cc\"\n            placeholder=\"CC:\"\n            className='cm-h-30p mt-1'\n            defaultValue={props.cc}\n          />\n          <Input\n            type=\"text\"\n            name=\"bcc\"\n            id=\"bcc\"\n            placeholder=\"Bcc:\"\n            className='cm-h-30p mt-1'\n            defaultValue={props.bcc}\n          />\n          <FormText color=\"muted\"> Email addresses to be separated by ,</FormText>\n          <Input\n            type=\"text\"\n            name=\"subject\"\n            id=\"subject\"\n            placeholder=\"Subject of the email\"\n            className='cm-h-30p mt-1'\n            defaultValue={props.subject}\n          />\n        </FormGroup>\n        <FormGroup>\n          {/* <Editor\n            editorState={props.meditorstate}\n            wrapperClassName=\"demo-wrapper\"\n            editorClassName=\"demo-editor\"\n            onEditorStateChange={(es) => {\n              props.meditorstatehandler(es);\n            }}\n            id=\"email\"\n            toolbarClassName=\"toolbar-class\"\n            toolbar={{\n              inline: { inDropdown: true },\n              list: { inDropdown: true },\n              textAlign: { inDropdown: true },\n              link: { inDropdown: true },\n              history: { inDropdown: true },\n            }}\n            /> */}\n          <CustomToolbarEditor \n            id=\"email\"\n            editorState={props.meditorstate}\n            content={ props.content }\n            onEditorStateChange={(es) => {\n              props.meditorstatehandler(es);\n            }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <RButton onClick={ () =>  props.sendemail() }>\n            Send <RiSendPlaneLine />\n          </RButton>\n          <Label for=\"attachment\" className='float-right'><MdAttachFile /></Label>\n          <Input\n            type=\"file\"\n            name=\"attachment\"\n            id=\"attachment\"\n            multiple=\"multiple\"\n            onChange={ (ev) => {\n              props.attachmenthandler(ev);\n            }}\n            hidden\n          />\n        </FormGroup>\n      </Form>\n    </div>\n  );\n\n  if(dockState === \"maximize\"){\n    return (\n      <Modal\n        isOpen={props.modal}\n        toggle={() => { props.closemodal() }}\n        className={props.classnm}\n      >\n        <ModalBody>\n          {composeContent}\n        </ModalBody>\n      </Modal>\n    ); \n  } else if(dockState === \"minimize\"){\n    return (\n      <Dock \n        position='bottom'\n        isVisible={ props.modal }\n        dimMode='none'\n        fluid={true}\n        size='0.1'\n        dockStyle={ minDockStyles }\n      >\n        {composeContent}\n      </Dock>\n    ); \n  } else {\n    return (\n      <Dock \n        position='bottom'\n        isVisible={ props.modal }\n        dimMode='none'\n        fluid={true}\n        size='0.82'\n        dockStyle={ dockStyles }\n      >\n        {composeContent}\n      </Dock>\n    );\n  }\n}\n\nexport default composeModal;","import React, { Component } from 'react';\nimport { draftToMarkdown, markdownToDraft } from 'markdown-draft-js';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport {stateFromHTML} from 'draft-js-import-html';\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Button as RButton, Form, FormGroup, Label, Input, Col,FormText } from 'reactstrap';\nimport { FaTrash } from 'react-icons/fa';\nimport { MdAttachFile } from \"react-icons/md\";\n\nclass MessageEditor extends Component {\n  state = {\n    editorState: EditorState.createEmpty(),\n    isCc: false,\n    isBcc: false,\n  };\n  constructor(props){\n    super(props);\n    let contentState = {};\n    if(this.props.markdown){\n      const markdownString = this.props.fwdMsg;\n      const rawData = markdownToDraft(markdownString);\n      contentState = convertFromRaw(rawData);\n    }else{\n      contentState = stateFromHTML(this.props.fwdMsg);\n    }\n    \n    let editorState = EditorState.createWithContent(contentState);\n    this.state = {editorState: editorState};\n    \n\n  }\n\n  componentDidMount(){\n    if(this.props.isEmailFwd===true){\n      document.getElementById(\"staticEmail\").value=\"\";\n      if(this.state.isCc){\n        document.getElementById(\"cc\").value=\"\";\n      }\n      if(this.state.isBcc){\n        document.getElementById(\"bcc\").value=\"\";\n      }\n      \n    }\n    if(this.props.orCc.length > 0 && this.state.isCc===false){\n      this.setState({\n        isCc: true\n      });\n    }\n\n    if(this.props.orBcc.length > 0 && this.state.isBcc===false){\n      this.setState({\n        isBcc: true\n      });\n    }\n  }\n\n  onEditorStateChange = editorState => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  render() {\n    const { editorState } = this.state;\n    \n    \n    return (\n      <div>\n        <div>\n          <Form>\n            <FormGroup row>\n              <Label for=\"staticEmail\" sm={2}>To</Label>\n              <Col sm={10} >\n                <Input\n                  type=\"text\"\n                  className=\"form-control-plaintext border-bottom\"\n                  id=\"staticEmail\"\n                  defaultValue={this.props.orFrom}\n                  placeholder = \"To\"\n\n                />\n                <FormText color=\"muted\"> Email addresses to be separated by ,</FormText>\n              </Col>\n            </FormGroup>\n          \n          {this.state.isCc ? (\n            <FormGroup row>\n              <Label for=\"cc\" sm={2}>Cc</Label>\n              <Col sm={10} >\n              <Input\n                type=\"text\"\n                className=\"form-control-plaintext border-bottom\"\n                id=\"cc\"\n                placeholder=\"Cc\"\n                defaultValue={this.props.isEmailFwd ? '': this.props.orCc}\n              />\n              <FormText color=\"muted\"> Email addresses to be separated by ,</FormText>\n              </Col>\n          </FormGroup>\n            \n          ) : (\n            <a\n              href=\"#cc\"\n              onClick={() => {\n                this.setState({ isCc: true });\n              }}\n            >\n              CC\n            </a>\n          )}\n          <span>&nbsp;</span>\n          {this.state.isBcc ? (\n            <FormGroup row>\n            <Label for=\"bcc\" sm={2}>Bcc</Label>\n            <Col sm={10}>\n            <Input\n              label=\"Bcc\"\n              type=\"text\"\n              className=\"form-control-plaintext border-bottom\"\n              id=\"bcc\"\n              placeholder=\"Bcc\"\n              defaultValue={this.props.isEmailFwd ? '': this.props.orBcc}\n            />\n            <FormText color=\"muted\"> Email addresses to be separated by ,</FormText>\n            </Col>\n            </FormGroup>\n            \n          ) : (\n            <a\n              href=\"#bcc\"\n              onClick={() => {\n                this.setState({ isBcc: true });\n              }}\n            >\n              BCC\n            </a>\n          )}\n          <FormGroup row>\n            <Label for=\"subject\" sm={2}>Subject</Label>\n            <Col sm={10}>\n            <Input\n              type=\"text\"\n              label=\"subject\"\n              className=\"form-control-plaintext border-bottom\"\n              id=\"subject\"\n              placeholder=\"Subject\"\n              defaultValue={this.props.isEmailFwd ? 'Fwd: '+this.props.subject: 'Re: '+this.props.subject}\n            />\n            </Col>\n          </FormGroup>\n          \n          </Form>\n        </div>\n        <span>&nbsp;</span>\n        <Editor\n          editorState={editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={this.onEditorStateChange}\n          placeholder=\"Type your mail here...\"\n          toolbarClassName=\"toolbar-class\"\n          toolbar={{\n            inline: { inDropdown: true },\n            list: { inDropdown: true },\n            textAlign: { inDropdown: true },\n            link: { inDropdown: true },\n            history: { inDropdown: true },\n          }}\n        />\n        <div>  <MdAttachFile /> &nbsp; <input\n                            type=\"file\"\n                            name=\"attachment\"\n                            id=\"attachment\"\n                            multiple\n                            onChange={ (ev) => {\n                              this.props.handleAttachment(ev);\n                            }}\n                          />\n                          <p className=\"text-muted\">Maximum allowed file size 20MB</p>\n        </div>\n        <RButton\n          className=\"mr-2\"\n          onClick={() => {\n            let email = {};\n            let content = editorState.getCurrentContent();\n            if(this.props.markdown){\n              email = draftToMarkdown(convertToRaw(content));\n            }else{\n              email = draftToHtml(convertToRaw(content));\n            }\n\n            this.props.replyEmail(email);\n            \n          }}\n        >\n          Send\n        </RButton>\n        <RButton\n          onClick={() => {\n            document.getElementById(\"attachment\").value='';\n            this.props.editor();\n            this.props.resetSubject();\n            this.props.closeEditors();\n          }}\n        >\n          <FaTrash />\n        </RButton>\n      </div>\n    );\n  }\n}\nexport default MessageEditor;","import React from 'react';\nimport {\n    FaTrash,\n    FaArrowLeft,\n    FaStar,\n    FaRegStar,\n    FaExclamationTriangle\n  } from 'react-icons/fa';\n\n  import {\n    Button as RButton,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    NavLink,\n  } from 'reactstrap';\n  \nimport MessageEditor from '../components/MessageEditor';\n\nconst emailPage = (props) => {\n    \n    let floatDir = \"float-right\";\n    if(props.breakpoint===\"xs\"){\n      floatDir=\"float-left i-block\";\n    }\n\n    \n\n   return (\n        <Row className=\"email-pg\">\n          <Col xl={9} lg={9} md={9} xs={9}>\n            { props.thread.map((el,index) => {\n              let emlBody = el.body;\n             if(el.hasAttachments===1){\n                emlBody+=\"<hr><p>Attachments:</p><ul>\";\n                let path = window.location.pathname;\n                let arr = path.split(\"/\");\n                let segment = arr.pop();\n                while(segment!==\"cmail\"){\n                  segment = arr.pop();\n                }\n                \n                path = arr.join(\"/\");\n            \n                for(let i=0;i<el.attachment.length;i++){\n                  emlBody+=\"<li><a href='\"+path+el.attachment[i]['url']+\"' target='_blank' download>\"+el.attachment[i]['file']+\"</a></li>\";\n                }\n                emlBody+=\"</ul>\";\n\n              }\n             return (<React.Fragment key={el.uid}>\n            <Card className=\"mt-3\">\n              <CardHeader>\n                  <div className=\"clearfix\">\n                    <NavLink \n                      to=\"#url\"\n                      title=\"Back to mailbox\"\n                      onClick={e => {\n                        e.preventDefault();\n                        props.setState({\n                          page: 'list',\n                        });\n                        props.fetchEmails();\n                      }}\n                      className=\"email-icons float-left\"\n                    >\n                        <FaArrowLeft />\n                    </NavLink>\n                    <span className=\"eml-subject float-left\">{el.subject}</span>\n                    \n                  <NavLink \n                    to=\"#\" \n                    className={`email-icons ${floatDir}`}\n                    title=\"Delete email\"\n                      onClick={e => {\n                        e.preventDefault();\n                        let uid = el.uid;\n                        props.trashEmail(uid);\n                        props.setState({\n                          page: 'list',\n                        });\n                        props.fetchEmails();\n                      }}\n                  >\n                    <FaTrash />\n                  </NavLink>\n                  <NavLink \n                    to=\"#\" \n                    className={`email-icons ${floatDir}`}\n                    title=\"Mark email as spam\"\n                      onClick={e => {\n                        e.preventDefault();\n                        let uid = el.uid;\n                        props.spamEmail(uid);\n                        props.setState({\n                          page: 'list',\n                        });\n                        props.fetchEmails();\n                      }}\n                  >\n                    <FaExclamationTriangle />\n                  </NavLink>\n                  <NavLink \n                      to=\"#\"\n                      title={props.emailStarred ? \"Unmark as starred\": \"Mark as starred\"}\n                      onClick={e => {\n                          e.preventDefault();\n                          let uid = el.uid;\n                          let nextStarredState = 0;\n                          \n                          if(props.emailStarred===1){\n                            nextStarredState = 0;\n                          }else{\n                            nextStarredState = 1;\n                          }\n                          \n                          props.setState({\n                            isEmailStarred: nextStarredState\n                          });\n  \n                          props.starEmail(uid,nextStarredState);\n                        }}\n                      className={`email-icons ${floatDir}`}\n                    >\n                    \n                      {props.emailStarred ? <FaStar />:<FaRegStar />} \n                    \n                  </NavLink>\n                  </div>\n                  <div className=\"clearfix\">\n                    <span className=\"float-left eml-from\" >{el.from}</span>\n                    <span className={`${floatDir}`}>{props.displayDate(el.date)}</span>\n                  </div>\n              </CardHeader>\n              <CardBody\n                dangerouslySetInnerHTML={{\n                  __html: `${emlBody}`\n                }}\n              />\n            </Card>\n            <Card className=\"mt-3\">\n              <CardBody>\n                <Row className=\"editor-container\">\n                  {el['editor'] ? (\n                    <Col xs=\"auto\">\n                      <MessageEditor\n                        className=\"ql-editor\"\n                        editor={props.editorHandler}\n                        from={el.from}\n                        cc={el.cc}\n                        bcc={el.bcc}\n                        subject={el.subject}\n                        replyEmail={props.replyEmail}\n                        resetSubject={props.resetSubject}\n                        orFrom={el.from}\n                        orCc={el.cc}\n                        orBcc={el.bcc}\n                        to={el.to}\n                        orTo={el.to}\n                        uid={el.uid}\n                        fwdMsg={props.fwdMsg}\n                        isEmailFwd={props.isEmailFwd}\n                        handleAttachment={ (ev) => { props.handleAttachment(ev) }}\n                        closeEditors={props.closeEditors}\n                        markdown={props.markdown}\n                      />\n                    </Col>\n                  ) : (\n                    <Row>\n                      <div className=\"ml-3\">\n                        <RButton\n                          className=\"ml-3\"\n                          onClick={() => {\n                            props.activeThread(index);\n                            let  subject = el.subject;\n                            props.setState({\n                              editor: true,\n                              orSubject: subject,\n                              subject: subject,\n                              isEmailFwd: false,\n                            });\n                          }}\n                        >\n                          Reply\n                        </RButton>\n                      </div>\n                      <div className=\"ml-3\">\n                        <RButton\n                          className=\"ml-3\"\n                          onClick={() => {\n                            props.activeThread(index);\n                            let subject = el.subject;\n                            props.setState({\n                              editor: true,\n                              orSubject: subject,\n                              subject: subject,\n                              isEmailFwd: true  \n                            });\n                          }}\n                        >\n                          Forward\n                        </RButton>\n                      </div>\n                    </Row>\n                  )}\n                </Row>\n              </CardBody>\n            </Card>\n            </React.Fragment>);\n            })} \n          </Col>\n        </Row>\n      );\n};\n\nexport default emailPage;","import React from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    CustomInput,\n} from 'reactstrap';\n\n\nconst settingsPage = (props) => {\n    let markdownSwitch = props.markdown;\n    return (\n        <Row className=\"email-pg\">\n          <Col xl={9} lg={9} md={9} xs={9}>\n              <Card className=\"mt-3\">\n                  <CardHeader>\n                     Settings\n                  </CardHeader>\n                  <CardBody>\n                      <CustomInput \n                        type=\"switch\" \n                        id=\"markdown\" \n                        name=\"markdown\" \n                        label=\"Enable Markdown\"\n                        onChange={(ev) => {\n                            markdownSwitch = ev.target.checked;\n                        }}\n                        defaultChecked={props.markdown} \n                        />\n                      <br />\n                      <Button onClick={()=>{\n                          props.setState({\n                            enableMarkdown: markdownSwitch,\n                            page: 'list'\n                          });\n                          props.fetchEmails();\n                      }}>Save</Button>\n                  </CardBody>\n              </Card>\n          </Col>\n        </Row>\n   );\n};\n\nexport default settingsPage;","import React from 'react';\nimport Page from 'components/Page';\nimport EnhancedTable from 'components/Cranberry/EnhancedTable';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\nimport { Container, Button } from 'react-floating-action-button';\nimport {\n  FaPen,\n  FaTools\n} from 'react-icons/fa';\nimport {\n  Button as CButton,\n  Card,\n  Row,\n} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { draftToMarkdown } from 'markdown-draft-js';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport ComposeModal from './ComposeModal';\nimport EmailPage from './EmailPage';\nimport SettingsPage from './SettingsPage';\n\nfunction createData(id, starred, from, subject,body,attachment, timestamp) {\n  return { id, starred, from, subject, timestamp };\n}\n\n/*const rows = [\n  createData('1', 0, 'CranberryMail', 'Loading emails', 'Please wait for a moment...', 1, new Date().toLocaleString()),\n];*/\n\nconst headCells = [\n  { id: 'starred', numeric: true, disablePadding: false, label: '' },\n  { id: 'from', numeric: false, disablePadding: false, label: 'From' },\n  { id: 'subject', numeric: false, disablePadding: false, label: 'Subject' },\n  { id: 'timestamp', numeric: false, disablePadding: false, label: 'Date' },\n  /*{ id: 'body', numeric: false, disablePadding: false, label: 'Body' },\n  {\n    id: 'attachment',\n    numeric: true,\n    disablePadding: false,\n    label: 'Attachment',\n  },*/\n  \n];\n\nclass InboxPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      app: props.location.state,\n      rows: [],\n      cells: headCells,\n      title: '',\n      busy: 1,\n      modal: false,\n      modal_backdrop: false,\n      modal_nested_parent: false,\n      modal_nested: false,\n      backdrop: true,\n      page: 'list',\n      uid: '',\n      orSubject:'',\n      subject: '',\n      body: '',\n      to: '',\n      orTo: '',\n      orFrom: '',\n      from: '',\n      orCc: '',\n      cc: '',\n      orBcc:'',\n      bcc: '',\n      date: '',\n      fwdMsg:'',\n      content: '',\n      attachmentContent: '',\n      editor: false,\n      modalEditorState: EditorState.createEmpty(),\n      isEmailFwd: false,\n      attachment: [],\n      isEmailStarred: 0,\n      thread: [], // thread of an email\n      emailThreads: [], // threads of all emails\n      messageId: '',\n      enableMarkdown: false,\n      enableEmailThread: false,\n      dateFormat: '',\n      dockState: \"normal\"\n    };\n  }\n\n  handleAttachment = (ev) =>{\n      const fileData = ev.target.files;\n      this.setState({\n        attachment: fileData\n      });\n  };\n\n  updateState = (state) =>{\n    this.setState({...state});\n  };\n\n  onModalEditorStateChange = modalEditorState => {\n    this.setState({\n      modalEditorState,\n    });\n  };\n\n  editorHandler = () => {\n    this.setState({\n      editor: false,\n    });\n  };\n\n  resetSubject= () =>{\n    this.setState({\n      subject: this.state.orSubject\n    });\n  };\n\n  replyEmail = (emailBody) => {\n    \n    let { token } = this.state.app;\n    const config = {\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    };\n    let body = emailBody;\n\n    let cc =  document.getElementById('cc');\n    let bcc = document.getElementById('bcc');\n    let to = document.getElementById('staticEmail').value;\n    let subject = document.getElementById('subject').value;\n    let messageId = this.state.messageId;\n\n    let data = {};\n   \n    if(this.state.attachment){\n   \n      data = new FormData();\n      \n      let i=0;\n      let fileData = this.state.attachment;\n      \n      for(;i<fileData.length;i++){\n        data.append('attachment[]',fileData[i]);\n      }\n      \n      data.append('to',to);\n      data.append('subject',subject);\n      data.append('body',body);\n      data.append('messageId',messageId);\n      if(cc !== null){\n        data.append('cc',cc.value);\n      }\n      if(bcc!== null){\n        data.append('cc',bcc.value);\n      }\n  \n      config.headers['Content-Type']= 'multipart/form-data';\n    }else{\n      data = {\n        to,\n        subject,\n        body,\n        messageId\n      };\n      if(cc !== null){\n        data.cc = cc.value;\n      }\n      if(bcc!== null){\n        data.bcc = bcc.value;\n      }\n    }\n\n\n    axios\n      .post(window._api + '/smtp/sendEmail', data, config)\n      .then(res => {\n        if (res.data.result > 0) {\n            this.editorHandler();\n            this.setState({\n              attachment: false\n            });\n            toast('Email has been sent');\n            this.resetSubject();\n            this.closeEditors();\n        }else{\n          toast(res.data.message);\n        }\n      });\n  };\n  starEmail = (uid,emailState) => {\n    if(this.props.curFolder!=='' || this.props.curFolder!==undefined){\n      let { token } = this.state.app;\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      };\n      const data = {\n        curFolder: this.props.curFolder,\n        uid,\n        emailState,\n        trashFolder: \"trash\",\n        starredFolder: \"starred\"\n      };\n      axios\n      .post(window._api + '/star_emails', data, config)\n      .then(res => {\n        \n        if (res.data.result > 0) {\n          if(emailState===0){\n            toast('Email moved to Inbox');\n          }else{\n            toast('Email moved to Starred');\n          }\n\n          if(this.state.page === 'list'){\n            let rows = this.state.rows;\n            rows = rows.filter((row) => {\n              if(row.id===uid){\n                return false;\n              }else{\n                return true;\n              }    \n            });\n\n            this.setState({rows});\n          }\n\n        }else{\n          if(emailState===0){\n            toast('Email still marked as starred');\n          }else{\n            toast('Unable to mark email as starred');\n          }\n        }\n\n\n        \n      });  \n    }\n  };\n\n  untrashEmail = (uid) => {\n    let flag = 0;\n    let { token } = this.state.app;\n    const config = {\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    };\n\n    if(Array.isArray(uid)){\n      let rows = this.state.rows;\n      uid.sort();\n      \n      let i = 0;\n      rows = rows.filter((row) => {\n          if(row.id===uid[i]){\n            i++;\n            return false;\n          }else{\n            return true;\n          }    \n      });\n\n      this.setState({rows});\n      uid = JSON.stringify(uid);\n      flag = 1;\n    }\n\n    const data = {\n      curfolder: 'inbox',\n      trash: 'trash',\n      uid\n    };\n\n    axios\n    .post(window._api + '/untrash_emails', data, config)\n    .then(res => {\n      if (res.data.result > 0) {\n        if(flag===1){\n          toast(\"Emails have been restored\");\n        }else{\n          toast('Email has been restored');\n        }\n        \n      }\n    });\n  };\n\n  trashEmail = (uid) => {\n    if(this.props.curFolder!=='' || this.props.curFolder!==undefined){\n      let flag = 0;\n      let { token } = this.state.app;\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      };\n\n      if(Array.isArray(uid)){\n        let rows = this.state.rows;\n        uid.sort();\n        \n        let i = 0;\n        rows = rows.filter((row) => {\n            if(row.id===uid[i]){\n              i++;\n              return false;\n            }else{\n              return true;\n            }    \n        });\n\n        this.setState({rows});\n        uid = JSON.stringify(uid);\n        flag = 1;\n      }\n\n      const data = {\n        curfolder: this.props.curFolder,\n        trash: 'trash',\n        uid\n      };\n\n      axios\n      .post(window._api + '/trash_emails', data, config)\n      .then(res => {\n        if (res.data.result > 0) {\n          if(flag===1){\n            toast(\"Emails have been deleted\");\n          }else{\n            toast('Email has been deleted');\n          }\n          \n        }\n      });  \n    }\n    \n  };\n\n  spamEmail = (uid) => {\n    if(this.props.curFolder!=='' || this.props.curFolder!==undefined){\n      let flag = 0;\n      let { token } = this.state.app;\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n      };\n\n      if(Array.isArray(uid)){\n        let rows = this.state.rows;\n        uid.sort();\n        \n        let i = 0;\n        rows = rows.filter((row) => {\n            if(row.id===uid[i]){\n              i++;\n              return false;\n            }else{\n              return true;\n            }    \n        });\n\n        this.setState({rows});\n        uid = JSON.stringify(uid);\n        flag = 1;\n      }\n\n      const data = {\n        curfolder: this.props.curFolder,\n        spam: 'spam',\n        uid\n      };\n\n      axios\n      .post(window._api + '/spam_emails', data, config)\n      .then(res => {\n        if (res.data.result > 0) {\n          if(flag===1){\n            toast(\"Emails marked as spam\");\n          }else{\n            toast('Email marked as spam');\n          }\n          \n        }\n      });  \n    }\n    \n  };\n\n  unspamEmail = (uid) => {\n    let flag = 0;\n    let { token } = this.state.app;\n    const config = {\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    };\n\n    if(Array.isArray(uid)){\n      let rows = this.state.rows;\n      uid.sort();\n      \n      let i = 0;\n      rows = rows.filter((row) => {\n          if(row.id===uid[i]){\n            i++;\n            return false;\n          }else{\n            return true;\n          }    \n      });\n\n      this.setState({rows});\n      uid = JSON.stringify(uid);\n      flag = 1;\n    }\n\n    const data = {\n      curfolder: 'inbox',\n      spam: 'spam',\n      uid\n    };\n\n    axios\n    .post(window._api + '/unspam_emails', data, config)\n    .then(res => {\n      if (res.data.result > 0) {\n        if(flag===1){\n          toast(\"Emails have been restored\");\n        }else{\n          toast('Email has been restored');\n        }\n        \n      }\n    });\n  };\n\n  sendEmail = (e) => {\n    let { token } = this.state.app;\n    const config = {\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n    };\n\n    let body = {};\n    let content = this.state.modalEditorState.getCurrentContent();\n\n    if(this.state.enableMarkdown){\n      body = draftToMarkdown(convertToRaw(content));\n    }else{\n      body = draftToHtml(convertToRaw(content));\n    }\n    \n    let cc =  document.getElementById('cc');\n    let bcc = document.getElementById('bcc');\n    let to = document.getElementById('to').value;\n    let subject = document.getElementById('subject').value;\n\n    let data = {};\n\n    if(this.state.attachment){\n      let i=0;\n      data = new FormData();\n    \n      let fileData = this.state.attachment;\n      \n      for(;i<fileData.length;i++){\n        data.append('attachment[]',fileData[i]);\n      }\n      \n      data.append('to',to);\n      data.append('subject',subject);\n      data.append('body',body);\n\n      if(cc !== null){\n        data.append('cc',cc.value);\n      }\n      if(bcc!== null){\n        data.append('bcc',bcc.value);\n      }\n  \n      config.headers['Content-Type']= 'multipart/form-data';\n     \n    }else{\n      data = {\n        to,\n        subject,\n        body,\n      };\n      if(cc !== null){\n        data.cc = cc.value;\n      }\n      if(bcc!== null){\n        data.bcc = bcc.value;\n      }\n    }\n\n    axios\n      .post(window._api + '/smtp/sendEmail', data, config)\n      .then(res => {\n        if (res.data.result > 0) {\n          \n          this.resetFields();\n          this.setState({\n            modal: false,\n          });\n          toast('Email has been sent');\n        }else{\n          toast(res.data.message);\n        }\n      });\n  };\n\n  resetFields = () => {\n    if (document.getElementById('to')) {\n      document.getElementById('to').value = '';\n      document.getElementById('cc').value = '';\n      document.getElementById('bcc').value = '';\n      document.getElementById('subject').value = '';\n      document.getElementById('attachment').value = '';\n      this.setState({\n        modalEditorState: EditorState.createEmpty(),\n        attachment: false\n      });\n     \n    }\n  };\n\n  handleCompose = modalType => () => {\n    if (!modalType) {\n      this.setState({\n        modal: !this.state.modal,\n      });\n      this.resetFields();\n    }\n  };\n\n  closeModal = () =>{\n    this.setState({\n      modal: false,\n      dockState: 'normal'\n    });\n  };\n  \n  resizeDock = dockstate => {\n    let cc =  document.getElementById('cc').value;\n    let bcc = document.getElementById('bcc').value;\n    let to = document.getElementById('to').value;\n    let subject = document.getElementById('subject').value;\n    let attachmentContent = document.getElementById('attachment').files;\n    let content = this.state.modalEditorState.getCurrentContent();\n    this.setState({\n      dockState: dockstate,\n      to,\n      cc,\n      bcc,\n      subject,\n      content,\n      attachmentContent\n    });\n  };\n\n  setEmailNode = node => {\n    \n    let cc = '';\n    let bcc = '';\n    let from = '';\n    let to='';\n\n    let orTo='';\n    let orCc='';\n    let orBcc='';\n    let orFrom='';\n    let body = '';\n    let subject = '';\n\n    if(node){\n      cc= node.cc;\n      orCc = node.cc;\n   \n      bcc = node.bcc;\n      orBcc = node.bcc;\n              \n\n      from = node.from;\n      orFrom = node.from;\n    \n      to= node.to;\n      orTo = node.to;\n    \n      body = node.body;\n      subject = node.subject;\n      let fwdMsg = \"<br><br><br>===Previous Message===<br><br>\";\n    fwdMsg += \"From: \"+from+\"<br>\";\n    \n    if(cc.length > 5){\n      fwdMsg += \"Cc: \"+cc+\"<br>\";\n    }\n\n    if(bcc.length > 5){\n      fwdMsg += \"Bcc: \"+bcc+\"<br>\";\n    }\n\n    let months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n      let date = new Date(node.date*1000);\n      let year = date.getFullYear();\n      let month = months_arr[date.getMonth()];\n      let day = date.getDate();\n      let hours = date.getHours();\n      let minutes = \"0\" + date.getMinutes();\n      date = day+'-'+month+'-'+year+' '+hours + ':' + minutes.substr(-2);\n\n    fwdMsg+= \"Date: \"+date+\"<br>\";\n    fwdMsg+= \"Subject: \"+subject+\"<br>\";\n    fwdMsg+=\"To: \"+to+\"<br><br><br>\";\n\n    fwdMsg+=node.body;\n    if(node.hasAttachments===1){\n      fwdMsg+=\"<hr><ul>\";\n      let i=0;\n      for(i=0;i<node.attachment.length;i++){\n        fwdMsg+=\"<li><a href='\"+window.location.origin+node.attachment[i]['url']+\"' target='_blank'>\"+node.attachment[i]['file']+\"</a></li>\";\n      }\n\n      fwdMsg+=\"</ul>\";\n    }\n    \n    \n      this.setState({\n        page: 'email',\n        subject,\n        body,\n        orFrom,\n        from,\n        orTo,\n        to,\n        orCc,\n        cc,\n        orBcc,\n        bcc,\n        date,\n        busy: 0,\n        fwdMsg,\n        uid: node.uid,\n        messageId: node.messageId\n      });\n    }\n  };\n\n  closeEditors = () => {\n    let { thread } = this.state;\n    let threadMax = thread.length;\n    \n    for(let i=0;i<threadMax;i++){\n      thread[i].editor = false;\n    }\n\n    this.setState({\n      thread\n    });\n\n\n  };\n\n  activeThread = index =>{\n    let { thread } = this.state;\n    let threadMax = thread.length;\n    \n    for(let i=0;i<threadMax;i++){\n      thread[i].editor = false;\n    }\n\n    thread[index].editor = true;\n\n    this.setEmailNode(thread[index]);\n    \n\n  };\n  \n  getRowIndex = (uid) => {\n    let { rows } = this.state;\n    let max = rows.length;\n    let i =0;\n    for(;i<max;i++){\n      if(this.state.emailThreads[i].uids.indexOf(uid)>=0){\n        break;\n      }\n    }\n    return i;\n  };\n\n  showSettings = () => {\n      this.setState({\n        page: \"settings\"\n      });\n  };\n\n  showEmail = uid => {\n    if(this.props.curFolder!=='' || this.props.curFolder!==undefined){\n      let row_index = this.getRowIndex(uid);\n    window.scrollTo(0, 0);\n    \n    this.setState({\n      busy: 1,\n      rows: [],\n    });\n    const config = {\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + this.state.app.token,\n      },\n    };\n\n    \n\n    const data = {\n      folder: this.props.curFolder,\n      thread_uids: this.state.emailThreads[row_index]['uids'],\n      has_thread: 1\n    };\n\n    axios\n      .post(window._api + '/email', data, config)\n      .then(res => {\n        if (res.status === 200 && res.data.length > 0) {\n          this.setEmailNode(res.data[0]);\n          this.setState({\n            \"thread\" : res.data\n          });\n          this.closeEditors();\n\n        }else{\n         this.setState({\n            page: 'list',\n          });\n          this.fetchEmails();\n        }\n      });  \n    }\n  };\n\n  componentDidMount() {\n    if (this.props.location.state !== undefined) {\n    } else {\n      this.props.history.push('/login');\n    }\n  }\n  componentDidUpdate(prevProps) {\n   \n    if (this.props.curFolder !== prevProps.curFolder) {\n      this.setState({\n        page: 'list',\n        title: this.props.curFolder\n      });\n      this.fetchEmails();\n    }\n\n    if(this.props.searchTerm !== prevProps.searchTerm){\n      this.setState({\n        page: 'list',\n      });\n\n      let term = this.props.searchTerm;\n      this.searchEmails(term);\n    }\n  }\n \n  displayDate = (curDate) => {\n    let months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    let date = new Date(curDate*1000);\n    let year = date.getFullYear();\n    let month = months_arr[date.getMonth()];\n    let day = date.getDate();\n    let hours = date.getHours();\n    let minutes = \"0\" + date.getMinutes();\n    date = day+'-'+month+'-'+year+' '+hours + ':' + minutes.substr(-2);\n\n    let eDate= date;\n   \n    let result = `${eDate}`;\n    return result;\n  };\n\n  fetchEmails = () => {\n    if(this.props.curFolder!=='' && this.props.curFolder!==undefined){\n      this.setState({\n        busy: 1,\n        rows: []\n      });\n    \n      const config = {\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + this.state.app.token,\n        },\n      };\n    \n      const data = {\n        folder: this.props.curFolder,\n        has_thread: 1\n      };\n    \n      axios\n        .post(window._api + '/emails', data, config)\n        .then(res => {\n          if (res.status === 200) {\n            \n            let erows = [];\n            let threads = [];\n            let starred = 0;\n            let curFolder = this.props.curFolder;\n            curFolder = curFolder.toLowerCase();\n            if(curFolder.search(\"starred\") > 0){\n              starred = 1;\n            }\n           \n            for (let i = 0; i < res.data.length; i++) {\n              let body = undefined; \n              let months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n              let date = new Date(res.data[i].date*1000);\n              let year = date.getFullYear();\n              let month = months_arr[date.getMonth()];\n              let day = date.getDate();\n              let hours = date.getHours();\n              let minutes = \"0\" + date.getMinutes();\n              let fdate = day+'-'+month+'-'+year+' '+hours + ':' + minutes.substr(-2);\n    \n              let isAttached = res.data[i].hasAttachments ? 1 : 0;\n              erows[i] = createData(\n                res.data[i].uid,\n                starred,\n                res.data[i].from,\n                res.data[i].subject,\n                body,\n                isAttached,\n                fdate,\n              );\n             threads[i] = res.data[i].thread;\n            }\n            \n           if (erows.length > 0) {\n              this.setState({\n                rows: erows,\n                emailThreads: threads,\n                busy: 0,\n              });\n            } else {\n              this.setState({\n                rows: '',\n                emailThreads: [],\n                busy: 0,\n              });\n            }\n          }\n        });\n    }\n    \n  };\n\n  searchEmails = (term) => {\n    if(this.props.curFolder!=='' || this.props.curFolder!==undefined){\n      this.setState({\n        busy: 1,\n        rows: []\n      });\n  \n      const config = {\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + this.state.app.token,\n        },\n      };\n  \n      const data = {\n        curfolder: this.props.curFolder,\n        sterm: term\n      };\n  \n      axios\n        .post(window._api + '/search_emails', data, config)\n        .then(res => {\n          if (res.status === 200) {\n            let erows = [];\n            let threads = [];\n            for (let i = 0; i < res.data.length; i++) {\n              let body = undefined; //res.data[i].body;\n              let fdate = new Date(res.data[i].date).toLocaleDateString('en-GB', {\n                month: 'numeric',\n                day: 'numeric',\n                year: 'numeric',\n              });\n  \n              let isAttached = res.data[i].hasAttachments ? 1 : 0;\n              erows[i] = createData(\n                res.data[i].uid,\n                0,\n                res.data[i].from[0].mail,\n                res.data[i].subject,\n                body,\n                isAttached,\n                fdate,\n              );\n             threads[i] = res.data[i].threads;\n            }\n  \n            \n  \n            if (erows.length > 0) {\n              this.setState({\n                rows: erows,\n                emailThreads: threads,\n                busy: 0,\n              });\n            } else {\n              this.setState({\n                rows: '',\n                emailThreads: threads,\n                busy: 0,\n              });\n            }\n          }\n        });  \n    }\n    \n  };\n\n  handleRefresh = () => {\n    this.fetchEmails();\n  };\n\n  render() {\n   \n    return (\n      <React.Fragment>\n        <Row>\n          <ToastContainer />\n        </Row>\n        <Page className=\"cm-inbox-page\">\n          {(this.state.page === 'list' || this.props.page === 'list') && (\n            <React.Fragment>\n              {this.state.rows.length === 0 && this.state.busy === 0 && (\n                <p style={{ padding: 15 }}>No emails found</p>\n              )}\n\n              {this.state.busy === 1 && (\n                <div className=\"cr-page-spinner\">\n                  <Spinner\n                    color={'danger'}\n                    style={{\n                      width: '10rem',\n                      height: '10rem',\n                      marginTop: '10rem',\n                    }}\n                  />{' '}\n                </div>\n              )}\n\n              {this.state.rows.length !== 0 && (\n                <React.Fragment>\n                  <Card className=\"email-refresh\">\n                    <div>\n                      <CButton onClick={this.showSettings}>\n                        <FaTools />\n                      </CButton>\n                    </div>\n                  </Card>\n                  <EnhancedTable\n                    rows={this.state.rows}\n                    rowsLength={this.state.rows.length}\n                    headCells={this.state.cells}\n                    tableTitle={this.props.curFolder}\n                    labelRowsPerPage=\"Per page\"\n                    showEmptyRows={false}\n                    props={this.props}\n                    showEmail={this.showEmail}\n                    trashEmail={this.trashEmail}\n                    untrashEmail={this.untrashEmail}\n                    starEmail = {this.starEmail}\n                    spamEmail = {this.spamEmail}\n                    unspamEmail = {this.unspamEmail}\n                    breakpoint = {this.props.breakpoint}\n                  ></EnhancedTable>\n                </React.Fragment>\n              )}\n\n              {this.state.modal && <ComposeModal\n                                        modal = {this.state.modal}\n                                        dockState = {this.state.dockState}\n                                        to = {this.state.to}\n                                        cc = {this.state.cc}\n                                        bcc = {this.state.bcc}\n                                        subject = {this.state.subject}\n                                        content = {this.state.content}\n                                        attachmentContent = {this.state.attachmentContent}\n                                        composehandler = {this.handleCompose}\n                                        closemodal = {this.closeModal}\n                                        resizeDock = {this.resizeDock}\n                                        classnm = {this.props.className}\n                                        sendemail = {this.sendEmail}\n                                        meditorstate = {this.state.modalEditorState}\n                                        meditorstatehandler= {this.onModalEditorStateChange}\n                                        attachmenthandler = {this.handleAttachment}\n                                        markdown = {this.state.enableMarkdown} \n                                    />}\n            </React.Fragment>\n          )}\n          {this.state.busy === 0 && this.state.page === 'list' && (\n            <Container>\n              <Button\n                tooltip=\"Compose email\"\n                rotate={false}\n                onClick={this.handleCompose()}\n              >\n                <FaPen />\n              </Button>\n            </Container>\n          )}\n          {this.state.page === 'email' && <EmailPage\n                                              breakpoint = {this.state.breakpoint}\n                                              thread = { this.state.thread }\n                                              setState = {this.updateState}\n                                              fetchEmails = {this.fetchEmails}\n                                              trashEmail = {this.trashEmail}\n                                              spamEmail = {this.spamEmail}\n                                              emailStarred = {this.state.isEmailStarred}\n                                              starEmail = {this.starEmail}\n                                              displayDate={this.displayDate}\n                                              editor = {this.state.editor}\n                                              editorHandler = {this.editorHandler}\n                                              replyEmail = {this.replyEmail}\n                                              resetSubject={this.resetSubject}\n                                              fwdMsg={this.state.fwdMsg}\n                                              isEmailFwd={this.state.isEmailFwd}\n                                              handleAttachment={this.handleAttachment}\n                                              activeThread = {this.activeThread}\n                                              closeEditors = {this.closeEditors}\n                                              markdown={this.state.enableMarkdown}\n                                           />}\n          {this.state.page === 'settings' && <SettingsPage\n                                                breakpoint = {this.state.breakpoint}\n                                                setState = {this.updateState}\n                                                fetchEmails = {this.fetchEmails}\n                                                markdown = {this.state.enableMarkdown}\n                                            />}\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(InboxPage);\n"],"sourceRoot":""}